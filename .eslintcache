[{"/Users/avon/Documents/Projects/web/github_project/my_recipes_builder/src/index.js":"1","/Users/avon/Documents/Projects/web/github_project/my_recipes_builder/src/App.js":"2","/Users/avon/Documents/Projects/web/github_project/my_recipes_builder/src/reportWebVitals.js":"3","/Users/avon/Documents/Projects/web/github_project/my_recipes_builder/src/store.js":"4","/Users/avon/Documents/Projects/web/github_project/my_recipes_builder/src/components/recipe_list.js":"5","/Users/avon/Documents/Projects/web/github_project/my_recipes_builder/src/components/search_bar.js":"6","/Users/avon/Documents/Projects/web/github_project/my_recipes_builder/src/components/form_list.js":"7","/Users/avon/Documents/Projects/web/github_project/my_recipes_builder/src/actions/index.js":"8","/Users/avon/Documents/Projects/web/github_project/my_recipes_builder/src/components/recipe_list_item.js":"9","/Users/avon/Documents/Projects/web/github_project/my_recipes_builder/src/reducers/index.js":"10","/Users/avon/Documents/Projects/web/github_project/my_recipes_builder/src/reducers/reducer_tab.js":"11","/Users/avon/Documents/Projects/web/github_project/my_recipes_builder/src/reducers/reducer_recipe.js":"12"},{"size":504,"mtime":1609939235705,"results":"13","hashOfConfig":"14"},{"size":1523,"mtime":1610217488888,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"14"},{"size":381,"mtime":1610212154515,"results":"17","hashOfConfig":"14"},{"size":1188,"mtime":1610296178723,"results":"18","hashOfConfig":"14"},{"size":2602,"mtime":1611481103453,"results":"19","hashOfConfig":"14"},{"size":7999,"mtime":1611381486384,"results":"20","hashOfConfig":"14"},{"size":1666,"mtime":1610369701768,"results":"21","hashOfConfig":"14"},{"size":834,"mtime":1610211761178,"results":"22","hashOfConfig":"14"},{"size":244,"mtime":1610208697521,"results":"23","hashOfConfig":"14"},{"size":365,"mtime":1610212228734,"results":"24","hashOfConfig":"14"},{"size":1118,"mtime":1610370136528,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"6ekvfe",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/avon/Documents/Projects/web/github_project/my_recipes_builder/src/index.js",[],["53","54"],"/Users/avon/Documents/Projects/web/github_project/my_recipes_builder/src/App.js",[],"/Users/avon/Documents/Projects/web/github_project/my_recipes_builder/src/reportWebVitals.js",[],"/Users/avon/Documents/Projects/web/github_project/my_recipes_builder/src/store.js",[],"/Users/avon/Documents/Projects/web/github_project/my_recipes_builder/src/components/recipe_list.js",[],"/Users/avon/Documents/Projects/web/github_project/my_recipes_builder/src/components/search_bar.js",["55","56","57"],"/Users/avon/Documents/Projects/web/github_project/my_recipes_builder/src/components/form_list.js",["58","59","60","61","62"],"import React, { useState, useEffect, useCallback } from 'react'\nimport 'antd/dist/antd.css';\nimport { Form, Input, Button, message, Modal } from 'antd';\nimport { useMappedState, useDispatch } from 'redux-react-hook'\nimport RecipeListItem from './recipe_list_item'\nimport { showRecipe, fetchStorageRecipes, saveToStorage, searchLists, delItem } from '../actions'\nimport _ from 'lodash'\n\nexport default function FormList(props) {\n\n    const myLists = useMappedState(state => state.recipes.fetchStorageRecipes)\n    const searchMyLists = useMappedState(state => state.recipes.searchLists)\n    const disPatch = useDispatch()\n    const [myTitle, setMyTitle] = useState('')\n    const [myIngredients, setMyIngredients] = useState('')\n    const [myLink, setMyLink] = useState('')\n    const [myImageLink, setMyImageLink] = useState('')\n    const [editID, setEditID] = useState(null)\n    const [startEdit, setStartEdit] = useState(false)\n    const [isModalVisible, setIsModalVisible] = useState(false);\n    const [searchItem, setSearchItem] = useState('')\n\n    const loadAll = useCallback(() => {\n        disPatch(fetchStorageRecipes())\n    }, [])\n\n    useEffect(() => {\n        loadAll()\n    }, [loadAll])\n\n    const onInputChange = (term) => {\n        const debouncedFetchRecipes = _.debounce(term => {\n            disPatch(searchLists(term, myLists))\n        }, 300)\n        setSearchItem(term)\n        debouncedFetchRecipes(term)\n    }\n\n    const showAddForm = () => {\n        setIsModalVisible(true);\n        formRef.current.resetFields();\n    };\n\n    const handleCancel = () => {\n        setIsModalVisible(false);\n        setStartEdit(false)\n    };\n\n    const formRef = React.createRef();\n\n    const layout = {\n        labelCol: {\n            span: 8,\n            margin: 20\n        },\n        wrapperCol: {\n            span: 16,\n            margin: 20\n        },\n    };\n\n    const tailLayout = {\n        wrapperCol: {\n            offset: 8,\n            span: 16,\n        },\n    };\n\n    const onReset = () => {\n        formRef.current.resetFields();\n    };\n\n    const onInputMyTitle = (myt) => {\n        setMyTitle(myt)\n    }\n\n    const onInputMyIngredients = (myI) => {\n        setMyIngredients(myI)\n    }\n\n    const onInputMyLink = (myL) => {\n        setMyLink(myL)\n    }\n\n    const onInputMyImageLink = (myIL) => {\n        setMyImageLink(myIL)\n    }\n\n    const saveToStorageRecipes = () => {\n\n        if (myTitle !== '' && myIngredients !== '') {\n\n            let addOne = [{\n                \"id\": (startEdit === false) ? (myLists && myLists.length === null || myLists.length === 0 ? 0 : myLists[myLists.length - 1].id + 1) : editID,\n                \"title\": myTitle,\n                \"href\": myLink ?? \"\",\n                \"ingredients\": myIngredients,\n                \"thumbnail\": myImageLink ?? \"\",\n                'removeIcon': true,\n                'editIcon': true\n            }]\n\n            let newList\n            if (startEdit === false) {\n                newList = myLists.concat(addOne)\n            } else {\n                setStartEdit(false)\n                const index = myLists.findIndex(food => food.id === editID);\n                myLists.splice(index, 1, addOne[0])\n                newList = myLists\n            }\n\n            disPatch(saveToStorage('myDatas', newList))\n            loadAll()\n\n        }\n        setIsModalVisible(false);\n    }\n\n    const editRecipe = (recipe) => {\n        formRef.current.setFieldsValue({\n            title: recipe.title,\n            ingredients: recipe.ingredients,\n            link: recipe.href,\n            imagelink: recipe.thumbnail\n        });\n        setMyTitle(recipe.title)\n        setMyIngredients(recipe.ingredients)\n        setMyLink(recipe.href)\n        setMyImageLink(recipe.thumbnail)\n        setEditID(recipe.id)\n        setStartEdit(true)\n        setIsModalVisible(true);\n\n    }\n\n    const removeRecipe = (recipe) => {\n        disPatch(delItem(recipe, myLists))\n        disPatch(saveToStorage('myDatas', myLists))\n        loadAll()\n    }\n\n    const getMyRecipeItems = () => {\n\n        if (myLists && myLists.length > 0) {\n\n            let renderLists = []\n            if (searchItem !== '') {\n                renderLists = searchMyLists\n            } else {\n                renderLists = myLists\n            }\n\n            return (renderLists.map(myList => {\n                return (\n                    <div>\n                        <RecipeListItem\n                            recipe={myList}\n                            key={myList.id}\n                            onRecipeSelect={myList => {\n                                if (myList.href.length > 0) {\n                                    disPatch(showRecipe(myList.href))\n                                } else {\n                                    message.error(`No link here`, 2.5);\n                                }\n                            }\n                            }\n                        />\n                        <div style={{ position: 'relative' }}>\n                            <div style={{ position: 'absolute', top: -68, right: 0 }}>\n                                {myList.editIcon === true ? <img src=\"../assets/images/edit.png\" alt=\"edit image\" onClick={() => editRecipe(myList)}\n                                    style={{ width: 40, height: 40, marginRight: 8, padding: 8, marginBottom: 10 }}\n                                /> : null}\n                                {myList.removeIcon === true ? <img src=\"../assets/images/close.png\" alt=\"delete image\" onClick={() => removeRecipe(myList)}\n                                    style={{ width: 40, height: 40, marginRight: 8, padding: 8, marginBottom: 10 }}\n                                /> : null}\n                            </div>\n                        </div>\n                    </div>\n                )\n            }))\n        }\n    }\n\n    return (\n        <Form\n            {...layout}\n            ref={formRef} name=\"control-ref\"\n        >\n            <div className=\"search-bar\">\n                <input\n                    autoFocus\n                    value={searchItem}\n                    onChange={e => onInputChange(e.target.value)}\n                    placeholder=\"Search By Ingredients...\"\n                />\n            </div>\n\n            <Form.Item {...tailLayout}>\n                <Button className='button-add' type=\"primary\" onClick={() => showAddForm()}>ADD</Button>\n            </Form.Item>\n            <Modal title=\"Recipe form\" visible={isModalVisible}\n                onCancel={handleCancel}\n                footer={[<Form.Item {...tailLayout}>\n                    <Button style={{ marginRight: 8 }} type=\"primary\" htmlType=\"submit\" onClick={() => saveToStorageRecipes()}>Submit</Button>\n                    <Button htmlType=\"button\" onClick={() => onReset()}>Reset</Button>\n                </Form.Item>]}>\n                <Form.Item name=\"title\" label=\"Recipe Title\" rules={[{ required: true }]}>\n                    <Input placeholder=\"e.g spaghetti, sushi, fries\" value={myTitle} onChange={e => onInputMyTitle(e.target.value)} />\n                </Form.Item>\n                <Form.Item name=\"ingredients\" label=\"Ingredients\" rules={[{ required: true }]}>\n                    <Input placeholder=\"e.g onion, garlic, bread, etc\" value={myIngredients} onChange={e => onInputMyIngredients(e.target.value)} />\n                </Form.Item>\n                <Form.Item name=\"link\" label=\"Recipe Link\" rules={[{ required: false }]}>\n                    <Input placeholder=\"recipe link...\" value={myLink} onChange={e => onInputMyLink(e.target.value)} />\n                </Form.Item>\n                <Form.Item name=\"imagelink\" label=\"Image\" rules={[{ required: false }]}>\n                    <Input placeholder=\"recipe image link...\" value={myImageLink} onChange={e => onInputMyImageLink(e.target.value)} />\n                </Form.Item>\n            </Modal>\n\n            <ul className=\"list-group\">\n                {getMyRecipeItems()}\n            </ul>\n        </Form >\n    )\n}\n","/Users/avon/Documents/Projects/web/github_project/my_recipes_builder/src/actions/index.js",[],"/Users/avon/Documents/Projects/web/github_project/my_recipes_builder/src/components/recipe_list_item.js",["63"],"import React from 'react'\n\nconst RecipeListItem = ({ recipe, onRecipeSelect }) => {\n    const { title, thumbnail, ingredients } = recipe\n\n    return (\n        <ul>\n            <li onClick={() => onRecipeSelect(recipe)} className=\"list-group-item\">\n                <div className=\"recipe-list-media\">\n                    <div className=\"media-left\">\n                        <img className=\"media-object\" src={thumbnail || '../assets/images/no-image-available.jpg'} />\n                    </div>\n                    <div className=\"media-body\">\n                        <div className=\"media-heading title\">{title}</div>\n                        <p>Ingredients: <span className=\"ingredients\">{ingredients}</span></p>\n                    </div>\n                </div>\n            </li>\n        </ul>\n    )\n}\n\nexport default RecipeListItem\n","/Users/avon/Documents/Projects/web/github_project/my_recipes_builder/src/reducers/index.js",[],"/Users/avon/Documents/Projects/web/github_project/my_recipes_builder/src/reducers/reducer_tab.js",[],"/Users/avon/Documents/Projects/web/github_project/my_recipes_builder/src/reducers/reducer_recipe.js",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":19,"column":8,"nodeType":"70","endLine":19,"endColumn":10,"suggestions":"71"},{"ruleId":"68","severity":1,"message":"72","line":25,"column":8,"nodeType":"70","endLine":25,"endColumn":17,"suggestions":"73"},{"ruleId":"68","severity":1,"message":"74","line":27,"column":42,"nodeType":"75","endLine":27,"endColumn":53},{"ruleId":"68","severity":1,"message":"69","line":25,"column":8,"nodeType":"70","endLine":25,"endColumn":10,"suggestions":"76"},{"ruleId":"77","severity":1,"message":"78","line":94,"column":56,"nodeType":"79","messageId":"80","endLine":94,"endColumn":58},{"ruleId":"77","severity":1,"message":"78","line":94,"column":83,"nodeType":"79","messageId":"80","endLine":94,"endColumn":85},{"ruleId":"81","severity":1,"message":"82","line":171,"column":61,"nodeType":"83","endLine":173,"endColumn":35},{"ruleId":"81","severity":1,"message":"82","line":174,"column":63,"nodeType":"83","endLine":176,"endColumn":35},{"ruleId":"84","severity":1,"message":"85","line":11,"column":25,"nodeType":"83","endLine":11,"endColumn":118},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'disPatch'. Either include it or remove the dependency array.","ArrayExpression",["88"],"React Hook useEffect has a missing dependency: 'tabNewName'. Either include it or remove the dependency array.",["89"],"React Hook useCallback received a function whose dependencies are unknown. Pass an inline function instead.","Identifier",["90"],"no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"desc":"91","fix":"92"},{"desc":"93","fix":"94"},{"desc":"91","fix":"95"},"Update the dependencies array to be: [disPatch]",{"range":"96","text":"97"},"Update the dependencies array to be: [loadAll, tabNewName]",{"range":"98","text":"99"},{"range":"100","text":"97"},[813,815],"[disPatch]",[913,922],"[loadAll, tabNewName]",[1133,1135]]