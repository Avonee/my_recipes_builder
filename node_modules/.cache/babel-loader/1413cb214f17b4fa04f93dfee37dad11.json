{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/avon/Documents/Projects/web/github_project/my_recipes_builder/src/components/form_list.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport 'antd/dist/antd.css';\nimport { Form, Input, Button, message, Modal } from 'antd';\nimport { useMappedState, useDispatch } from 'redux-react-hook';\nimport RecipeListItem from './recipe_list_item';\nimport { showRecipe, fetchStorageRecipes, saveToStorage, searchLists, delItem } from '../actions';\nimport _ from 'lodash';\nexport default function FormList(props) {\n  _s();\n\n  const myLists = useMappedState(state => state.recipes.fetchStorageRecipes);\n  const searchMyLists = useMappedState(state => state.recipes.searchLists);\n  const disPatch = useDispatch();\n  const [myTitle, setMyTitle] = useState('');\n  const [myIngredients, setMyIngredients] = useState('');\n  const [myLink, setMyLink] = useState('');\n  const [myImageLink, setMyImageLink] = useState('');\n  const [editID, setEditID] = useState(null);\n  const [startEdit, setStartEdit] = useState(false);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [searchItem, setSearchItem] = useState('');\n  const loadAll = useCallback(() => {\n    disPatch(fetchStorageRecipes());\n  }, []);\n  useEffect(() => {\n    loadAll();\n  }, [loadAll]);\n\n  const onInputChange = term => {\n    const debouncedFetchRecipes = _.debounce(term => {\n      disPatch(searchLists(term, myLists));\n    }, 300);\n\n    setSearchItem(term);\n    debouncedFetchRecipes(term);\n  };\n\n  const showAddForm = () => {\n    setIsModalVisible(true);\n    formRef.current.resetFields();\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n    setStartEdit(false);\n  };\n\n  const formRef = /*#__PURE__*/React.createRef();\n  const layout = {\n    labelCol: {\n      span: 8,\n      margin: 20\n    },\n    wrapperCol: {\n      span: 16,\n      margin: 20\n    }\n  };\n  const tailLayout = {\n    wrapperCol: {\n      offset: 8,\n      span: 16\n    }\n  };\n\n  const onReset = () => {\n    formRef.current.resetFields();\n  };\n\n  const onInputMyTitle = myt => {\n    setMyTitle(myt);\n  };\n\n  const onInputMyIngredients = myI => {\n    setMyIngredients(myI);\n  };\n\n  const onInputMyLink = myL => {\n    setMyLink(myL);\n  };\n\n  const onInputMyImageLink = myIL => {\n    setMyImageLink(myIL);\n  };\n\n  const saveToStorageRecipes = () => {\n    if (myTitle !== '' && myIngredients !== '') {\n      let addOne = [{\n        \"id\": startEdit === false ? myLists.length === 0 ? 0 : myLists[myLists.length - 1].id + 1 : editID,\n        \"title\": myTitle,\n        \"href\": myLink !== null && myLink !== void 0 ? myLink : \"\",\n        \"ingredients\": myIngredients,\n        \"thumbnail\": myImageLink !== null && myImageLink !== void 0 ? myImageLink : \"\",\n        'removeIcon': true,\n        'editIcon': true\n      }];\n      let newList;\n\n      if (startEdit === false) {\n        newList = myLists.concat(addOne);\n      } else {\n        setStartEdit(false);\n        const index = myLists.findIndex(food => food.id === editID);\n        myLists.splice(index, 1, addOne[0]);\n        newList = myLists;\n      }\n\n      disPatch(saveToStorage('myDatas', newList));\n      loadAll();\n    }\n\n    setIsModalVisible(false);\n  };\n\n  const editRecipe = recipe => {\n    formRef.current.setFieldsValue({\n      title: recipe.title,\n      ingredients: recipe.ingredients,\n      link: recipe.href,\n      imagelink: recipe.thumbnail\n    });\n    setMyTitle(recipe.title);\n    setMyIngredients(recipe.ingredients);\n    setMyLink(recipe.href);\n    setMyImageLink(recipe.thumbnail);\n    setEditID(recipe.id);\n    setStartEdit(true);\n    setIsModalVisible(true);\n  };\n\n  const removeRecipe = recipe => {\n    disPatch(delItem(recipe, myLists));\n    disPatch(saveToStorage('myDatas', myLists));\n    loadAll();\n  };\n\n  const getMyRecipeItems = () => {\n    if (myLists.length > 0) {\n      let renderLists = [];\n\n      if (searchItem !== '') {\n        renderLists = searchMyLists;\n      } else {\n        renderLists = myLists;\n      }\n\n      return renderLists.map(myList => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(RecipeListItem, {\n            recipe: myList,\n            onRecipeSelect: myList => {\n              if (myList.href.length > 0) {\n                disPatch(showRecipe(myList.href));\n              } else {\n                message.error(`No link here`, 2.5);\n              }\n            }\n          }, myList.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'relative'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                position: 'absolute',\n                top: -68,\n                right: 0\n              },\n              children: [myList.editIcon === true ? /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"../assets/images/edit.png\",\n                alt: \"edit image\",\n                onClick: () => editRecipe(myList),\n                style: {\n                  width: 40,\n                  height: 40,\n                  marginRight: 8,\n                  padding: 8,\n                  marginBottom: 10\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 61\n              }, this) : null, myList.removeIcon === true ? /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"../assets/images/close.png\",\n                alt: \"delete image\",\n                onClick: () => removeRecipe(myList),\n                style: {\n                  width: 40,\n                  height: 40,\n                  marginRight: 8,\n                  padding: 8,\n                  marginBottom: 10\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 63\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, { ...layout,\n    ref: formRef,\n    name: \"control-ref\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        autoFocus: true,\n        value: searchItem,\n        onChange: e => onInputChange(e.target.value),\n        placeholder: \"Search By Ingredients...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...tailLayout,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        className: \"button-add\",\n        type: \"primary\",\n        onClick: () => showAddForm(),\n        children: \"ADD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Recipe form\",\n      visible: isModalVisible,\n      onCancel: handleCancel,\n      footer: [/*#__PURE__*/_jsxDEV(Form.Item, { ...tailLayout,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            marginRight: 8\n          },\n          type: \"primary\",\n          htmlType: \"submit\",\n          onClick: () => saveToStorageRecipes(),\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          htmlType: \"button\",\n          onClick: () => onReset(),\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 26\n      }, this)],\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"title\",\n        label: \"Recipe Title\",\n        rules: [{\n          required: true\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"e.g spaghetti, sushi, fries\",\n          value: myTitle,\n          onChange: e => onInputMyTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"ingredients\",\n        label: \"Ingredients\",\n        rules: [{\n          required: true\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"e.g onion, garlic, bread, etc\",\n          value: myIngredients,\n          onChange: e => onInputMyIngredients(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"link\",\n        label: \"Recipe Link\",\n        rules: [{\n          required: false\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"recipe link...\",\n          value: myLink,\n          onChange: e => onInputMyLink(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"imagelink\",\n        label: \"Image\",\n        rules: [{\n          required: false\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"recipe image link...\",\n          value: myImageLink,\n          onChange: e => onInputMyImageLink(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: getMyRecipeItems()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FormList, \"hFq7/Kzk853BwCLlx4U5nJdxCtg=\", false, function () {\n  return [useMappedState, useMappedState, useDispatch];\n});\n\n_c = FormList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormList\");","map":{"version":3,"sources":["/Users/avon/Documents/Projects/web/github_project/my_recipes_builder/src/components/form_list.js"],"names":["React","useState","useEffect","useCallback","Form","Input","Button","message","Modal","useMappedState","useDispatch","RecipeListItem","showRecipe","fetchStorageRecipes","saveToStorage","searchLists","delItem","_","FormList","props","myLists","state","recipes","searchMyLists","disPatch","myTitle","setMyTitle","myIngredients","setMyIngredients","myLink","setMyLink","myImageLink","setMyImageLink","editID","setEditID","startEdit","setStartEdit","isModalVisible","setIsModalVisible","searchItem","setSearchItem","loadAll","onInputChange","term","debouncedFetchRecipes","debounce","showAddForm","formRef","current","resetFields","handleCancel","createRef","layout","labelCol","span","margin","wrapperCol","tailLayout","offset","onReset","onInputMyTitle","myt","onInputMyIngredients","myI","onInputMyLink","myL","onInputMyImageLink","myIL","saveToStorageRecipes","addOne","length","id","newList","concat","index","findIndex","food","splice","editRecipe","recipe","setFieldsValue","title","ingredients","link","href","imagelink","thumbnail","removeRecipe","getMyRecipeItems","renderLists","map","myList","error","position","top","right","editIcon","width","height","marginRight","padding","marginBottom","removeIcon","e","target","value","required"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react'\nimport 'antd/dist/antd.css';\nimport { Form, Input, Button, message, Modal } from 'antd';\nimport { useMappedState, useDispatch } from 'redux-react-hook'\nimport RecipeListItem from './recipe_list_item'\nimport { showRecipe, fetchStorageRecipes, saveToStorage, searchLists, delItem } from '../actions'\nimport _ from 'lodash'\n\nexport default function FormList(props) {\n\n    const myLists = useMappedState(state => state.recipes.fetchStorageRecipes)\n    const searchMyLists = useMappedState(state => state.recipes.searchLists)\n    const disPatch = useDispatch()\n    const [myTitle, setMyTitle] = useState('')\n    const [myIngredients, setMyIngredients] = useState('')\n    const [myLink, setMyLink] = useState('')\n    const [myImageLink, setMyImageLink] = useState('')\n    const [editID, setEditID] = useState(null)\n    const [startEdit, setStartEdit] = useState(false)\n    const [isModalVisible, setIsModalVisible] = useState(false);\n    const [searchItem, setSearchItem] = useState('')\n\n    const loadAll = useCallback(() => {\n        disPatch(fetchStorageRecipes())\n    }, [])\n\n    useEffect(() => {\n        loadAll()\n    }, [loadAll])\n\n    const onInputChange = (term) => {\n        const debouncedFetchRecipes = _.debounce(term => {\n            disPatch(searchLists(term, myLists))\n        }, 300)\n        setSearchItem(term)\n        debouncedFetchRecipes(term)\n    }\n\n    const showAddForm = () => {\n        setIsModalVisible(true);\n        formRef.current.resetFields();\n    };\n\n    const handleCancel = () => {\n        setIsModalVisible(false);\n        setStartEdit(false)\n    };\n\n    const formRef = React.createRef();\n\n    const layout = {\n        labelCol: {\n            span: 8,\n            margin: 20\n        },\n        wrapperCol: {\n            span: 16,\n            margin: 20\n        },\n    };\n\n    const tailLayout = {\n        wrapperCol: {\n            offset: 8,\n            span: 16,\n        },\n    };\n\n    const onReset = () => {\n        formRef.current.resetFields();\n    };\n\n    const onInputMyTitle = (myt) => {\n        setMyTitle(myt)\n    }\n\n    const onInputMyIngredients = (myI) => {\n        setMyIngredients(myI)\n    }\n\n    const onInputMyLink = (myL) => {\n        setMyLink(myL)\n    }\n\n    const onInputMyImageLink = (myIL) => {\n        setMyImageLink(myIL)\n    }\n\n    const saveToStorageRecipes = () => {\n\n        if (myTitle !== '' && myIngredients !== '') {\n\n            let addOne = [{\n                \"id\": (startEdit === false) ? (myLists.length === 0 ? 0 : myLists[myLists.length - 1].id + 1) : editID,\n                \"title\": myTitle,\n                \"href\": myLink ?? \"\",\n                \"ingredients\": myIngredients,\n                \"thumbnail\": myImageLink ?? \"\",\n                'removeIcon': true,\n                'editIcon': true\n            }]\n\n            let newList\n            if (startEdit === false) {\n                newList = myLists.concat(addOne)\n            } else {\n                setStartEdit(false)\n                const index = myLists.findIndex(food => food.id === editID);\n                myLists.splice(index, 1, addOne[0])\n                newList = myLists\n            }\n\n            disPatch(saveToStorage('myDatas', newList))\n            loadAll()\n\n        }\n        setIsModalVisible(false);\n    }\n\n    const editRecipe = (recipe) => {\n        formRef.current.setFieldsValue({\n            title: recipe.title,\n            ingredients: recipe.ingredients,\n            link: recipe.href,\n            imagelink: recipe.thumbnail\n        });\n        setMyTitle(recipe.title)\n        setMyIngredients(recipe.ingredients)\n        setMyLink(recipe.href)\n        setMyImageLink(recipe.thumbnail)\n        setEditID(recipe.id)\n        setStartEdit(true)\n        setIsModalVisible(true);\n\n    }\n\n    const removeRecipe = (recipe) => {\n        disPatch(delItem(recipe, myLists))\n        disPatch(saveToStorage('myDatas', myLists))\n        loadAll()\n    }\n\n    const getMyRecipeItems = () => {\n\n        if (myLists.length > 0) {\n\n            let renderLists = []\n            if (searchItem !== '') {\n                renderLists = searchMyLists\n            } else {\n                renderLists = myLists\n            }\n\n            return (renderLists.map(myList => {\n                return (\n                    <div>\n                        <RecipeListItem\n                            recipe={myList}\n                            key={myList.id}\n                            onRecipeSelect={myList => {\n                                if (myList.href.length > 0) {\n                                    disPatch(showRecipe(myList.href))\n                                } else {\n                                    message.error(`No link here`, 2.5);\n                                }\n                            }\n                            }\n                        />\n                        <div style={{ position: 'relative' }}>\n                            <div style={{ position: 'absolute', top: -68, right: 0 }}>\n                                {myList.editIcon === true ? <img src=\"../assets/images/edit.png\" alt=\"edit image\" onClick={() => editRecipe(myList)}\n                                    style={{ width: 40, height: 40, marginRight: 8, padding: 8, marginBottom: 10 }}\n                                /> : null}\n                                {myList.removeIcon === true ? <img src=\"../assets/images/close.png\" alt=\"delete image\" onClick={() => removeRecipe(myList)}\n                                    style={{ width: 40, height: 40, marginRight: 8, padding: 8, marginBottom: 10 }}\n                                /> : null}\n                            </div>\n                        </div>\n                    </div>\n                )\n            }))\n        }\n    }\n\n    return (\n        <Form\n            {...layout}\n            ref={formRef} name=\"control-ref\"\n        >\n            <div className=\"search-bar\">\n                <input\n                    autoFocus\n                    value={searchItem}\n                    onChange={e => onInputChange(e.target.value)}\n                    placeholder=\"Search By Ingredients...\"\n                />\n            </div>\n\n            <Form.Item {...tailLayout}>\n                <Button className='button-add' type=\"primary\" onClick={() => showAddForm()}>ADD</Button>\n            </Form.Item>\n            <Modal title=\"Recipe form\" visible={isModalVisible}\n                onCancel={handleCancel}\n                footer={[<Form.Item {...tailLayout}>\n                    <Button style={{ marginRight: 8 }} type=\"primary\" htmlType=\"submit\" onClick={() => saveToStorageRecipes()}>Submit</Button>\n                    <Button htmlType=\"button\" onClick={() => onReset()}>Reset</Button>\n                </Form.Item>]}>\n                <Form.Item name=\"title\" label=\"Recipe Title\" rules={[{ required: true }]}>\n                    <Input placeholder=\"e.g spaghetti, sushi, fries\" value={myTitle} onChange={e => onInputMyTitle(e.target.value)} />\n                </Form.Item>\n                <Form.Item name=\"ingredients\" label=\"Ingredients\" rules={[{ required: true }]}>\n                    <Input placeholder=\"e.g onion, garlic, bread, etc\" value={myIngredients} onChange={e => onInputMyIngredients(e.target.value)} />\n                </Form.Item>\n                <Form.Item name=\"link\" label=\"Recipe Link\" rules={[{ required: false }]}>\n                    <Input placeholder=\"recipe link...\" value={myLink} onChange={e => onInputMyLink(e.target.value)} />\n                </Form.Item>\n                <Form.Item name=\"imagelink\" label=\"Image\" rules={[{ required: false }]}>\n                    <Input placeholder=\"recipe image link...\" value={myImageLink} onChange={e => onInputMyImageLink(e.target.value)} />\n                </Form.Item>\n            </Modal>\n\n            <ul className=\"list-group\">\n                {getMyRecipeItems()}\n            </ul>\n        </Form >\n    )\n}\n"]},"metadata":{},"sourceType":"module"}