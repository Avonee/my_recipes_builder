{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/avon/Documents/Projects/web/my-recipe/src/components/form_list.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport 'antd/dist/antd.css';\nimport { Form, Input, Button, Radio, message } from 'antd';\nimport { useDispatch } from 'redux-react-hook';\nimport RecipeListItem from './recipe_list_item';\nimport { showRecipe } from '../actions';\nconst MOCK_LIST = [{\n  \"title\": \"Copycat Chilis Southwest Egg Rolls Recipe\",\n  \"href\": \"\",\n  \"ingredients\": \"avocado, buttermilk, black beans, cayenne, chicken, chili powder, corn, cumin, dill weed, parsley, flour tortillas, garlic powder, green onion, mayonnaise, monterey jack cheese, onions, onion powder, black pepper, red pepper, avocado, salt, salt, sour cream, spinach, tomato, vegetable oil, white vinegar\",\n  \"thumbnail\": \"\"\n}, {\n  \"title\": \"Vegan Egg White Substitute Recipe\",\n  \"href\": \"http://www.grouprecipes.com/11755/vegan-egg-white-substitute.html\",\n  \"ingredients\": \"flax seed, water\",\n  \"thumbnail\": \"\"\n}];\nexport default function FormList(props) {\n  _s();\n\n  const [myLists, setMyLists] = useState([]);\n  const [myTitle, setMyTitle] = useState('');\n  const [myIngredients, setMyIngredients] = useState('');\n  const [myLink, setMyLink] = useState('');\n  const [myImageLink, setMyImageLink] = useState('');\n  const disPatch = useDispatch();\n  const loadAll = useCallback(() => {\n    // load from storage\n    loadStorage();\n  }, []);\n  useEffect(() => {\n    localStorage.clear();\n    loadAll(); // setMyLists(MOCK_LIST) // for test\n  }, [loadAll]);\n  const formRef = /*#__PURE__*/React.createRef(); // const [form] = Form.useForm();\n  // const formLayout = 'vertical'\n\n  const layout = {\n    labelCol: {\n      span: 8,\n      margin: 20\n    },\n    wrapperCol: {\n      span: 16,\n      margin: 20\n    }\n  };\n  const tailLayout = {\n    wrapperCol: {\n      offset: 8,\n      span: 16\n    }\n  };\n\n  const onFinish = values => {\n    console.log(values);\n  };\n\n  const onReset = () => {\n    formRef.current.resetFields();\n  };\n\n  const onInputMyTitle = myt => {\n    setMyTitle(myt);\n  };\n\n  const onInputMyIngredients = myI => {\n    setMyIngredients(myI);\n  };\n\n  const onInputMyLink = myL => {\n    setMyLink(myL);\n  };\n\n  const onInputMyImageLink = myIL => {\n    setMyImageLink(myIL);\n  };\n\n  const loadStorage = () => {\n    let loadDatas = JSON.parse(localStorage.getItem('myDatas'));\n\n    if (loadDatas) {\n      setMyLists(loadDatas);\n    }\n  };\n\n  const saveToStorage = () => {\n    // console.log('現在資料是？', myTitle, myIngredients)\n    if (myTitle != '' && myIngredients != '') {\n      // console.log('要來存囉！')\n      let addOne = [{\n        \"title\": myTitle,\n        \"href\": myLink !== null && myLink !== void 0 ? myLink : \"\",\n        \"ingredients\": myIngredients,\n        \"thumbnail\": myImageLink !== null && myImageLink !== void 0 ? myImageLink : \"\",\n        'removeIcon': true,\n        'editIcon': true\n      }];\n      let newList = myLists.concat(addOne);\n      setMyLists(newList);\n      localStorage.setItem('myDatas', JSON.stringify(newList));\n    }\n  };\n\n  const getMyRecipeItems = () => {\n    // console.log('要來列出my list了！！！', myLists)\n    if (myLists.length > 0) {\n      // console.log('要開始渲染資料！my!', myLists)\n      return myLists.map(myList => {\n        // console.log('每一筆資料 my：：：', myList)\n        return /*#__PURE__*/_jsxDEV(RecipeListItem, {\n          recipe: myList,\n          onRecipeSelect: myList => {\n            if (myList.href.length > 0) {\n              disPatch(showRecipe(myList.href));\n            } else {\n              message.error(`No link here`, 2.5);\n            }\n          }\n        }, myList.title, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, { ...layout,\n    ref: formRef,\n    name: \"control-ref\",\n    onFinish: () => onFinish(),\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"title\",\n      label: \"Recipe Title\",\n      rules: [{\n        required: true\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"e.g spaghetti, sushi, fries\",\n        value: myTitle,\n        onChange: e => onInputMyTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"ingredients\",\n      label: \"Ingredients\",\n      rules: [{\n        required: true\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"e.g onion, garlic, bread, etc\",\n        value: myIngredients,\n        onChange: e => onInputMyIngredients(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"link\",\n      label: \"Recipe Link\",\n      rules: [{\n        required: false\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"recipe link...\",\n        value: myLink,\n        onChange: e => onInputMyLink(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"image link\",\n      label: \"Image\",\n      rules: [{\n        required: false\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"recipe image link...\",\n        value: myImageLink,\n        onChange: e => onInputMyImageLink(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...tailLayout,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          marginRight: 8\n        },\n        type: \"primary\",\n        htmlType: \"submit\",\n        onClick: () => saveToStorage(),\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        htmlType: \"button\",\n        onClick: () => onReset(),\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: getMyRecipeItems()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FormList, \"2w/h2IdhR6hFXudg5+Say5ejJzg=\", false, function () {\n  return [useDispatch];\n});\n\n_c = FormList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormList\");","map":{"version":3,"sources":["/Users/avon/Documents/Projects/web/my-recipe/src/components/form_list.js"],"names":["React","useState","useEffect","useCallback","Form","Input","Button","Radio","message","useDispatch","RecipeListItem","showRecipe","MOCK_LIST","FormList","props","myLists","setMyLists","myTitle","setMyTitle","myIngredients","setMyIngredients","myLink","setMyLink","myImageLink","setMyImageLink","disPatch","loadAll","loadStorage","localStorage","clear","formRef","createRef","layout","labelCol","span","margin","wrapperCol","tailLayout","offset","onFinish","values","console","log","onReset","current","resetFields","onInputMyTitle","myt","onInputMyIngredients","myI","onInputMyLink","myL","onInputMyImageLink","myIL","loadDatas","JSON","parse","getItem","saveToStorage","addOne","newList","concat","setItem","stringify","getMyRecipeItems","length","map","myList","href","error","title","required","e","target","value","marginRight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react'\nimport 'antd/dist/antd.css';\nimport { Form, Input, Button, Radio, message } from 'antd';\nimport { useDispatch } from 'redux-react-hook'\nimport RecipeListItem from './recipe_list_item'\nimport { showRecipe } from '../actions'\n\nconst MOCK_LIST = [\n    {\n        \"title\": \"Copycat Chilis Southwest Egg Rolls Recipe\",\n        \"href\": \"\",\n        \"ingredients\": \"avocado, buttermilk, black beans, cayenne, chicken, chili powder, corn, cumin, dill weed, parsley, flour tortillas, garlic powder, green onion, mayonnaise, monterey jack cheese, onions, onion powder, black pepper, red pepper, avocado, salt, salt, sour cream, spinach, tomato, vegetable oil, white vinegar\",\n        \"thumbnail\": \"\"\n    },\n    {\n        \"title\": \"Vegan Egg White Substitute Recipe\",\n        \"href\": \"http://www.grouprecipes.com/11755/vegan-egg-white-substitute.html\",\n        \"ingredients\": \"flax seed, water\",\n        \"thumbnail\": \"\"\n    },\n]\n\nexport default function FormList(props) {\n\n    const [myLists, setMyLists] = useState([])\n    const [myTitle, setMyTitle] = useState('')\n    const [myIngredients, setMyIngredients] = useState('')\n    const [myLink, setMyLink] = useState('')\n    const [myImageLink, setMyImageLink] = useState('')\n\n    const disPatch = useDispatch()\n\n    const loadAll = useCallback(() => {\n        // load from storage\n        loadStorage()\n    }, [])\n\n    useEffect(() => {\n        localStorage.clear()\n        loadAll()\n        // setMyLists(MOCK_LIST) // for test\n    }, [loadAll])\n\n    const formRef = React.createRef();\n    // const [form] = Form.useForm();\n    // const formLayout = 'vertical'\n    const layout = {\n        labelCol: {\n            span: 8,\n            margin: 20\n        },\n        wrapperCol: {\n            span: 16,\n            margin: 20\n        },\n    };\n    const tailLayout = {\n        wrapperCol: {\n            offset: 8,\n            span: 16,\n        },\n    };\n\n    const onFinish = (values) => {\n        console.log(values);\n    };\n    const onReset = () => {\n        formRef.current.resetFields();\n    };\n    const onInputMyTitle = (myt) => {\n        setMyTitle(myt)\n    }\n    const onInputMyIngredients = (myI) => {\n        setMyIngredients(myI)\n    }\n    const onInputMyLink = (myL) => {\n        setMyLink(myL)\n    }\n    const onInputMyImageLink = (myIL) => {\n        setMyImageLink(myIL)\n    }\n    const loadStorage = () => {\n        let loadDatas = JSON.parse(localStorage.getItem('myDatas'))\n        if (loadDatas) {\n            setMyLists(loadDatas)\n        }\n    }\n    const saveToStorage = () => {\n        // console.log('現在資料是？', myTitle, myIngredients)\n        if (myTitle != '' && myIngredients != '') {\n            // console.log('要來存囉！')\n            let addOne = [{\n                \"title\": myTitle,\n                \"href\": myLink ?? \"\",\n                \"ingredients\": myIngredients,\n                \"thumbnail\": myImageLink ?? \"\",\n                'removeIcon': true,\n                'editIcon': true\n            }]\n\n            let newList = myLists.concat(addOne)\n            setMyLists(newList)\n            localStorage.setItem('myDatas', JSON.stringify(newList))\n\n        }\n\n    }\n    const getMyRecipeItems = () => {\n        // console.log('要來列出my list了！！！', myLists)\n        if (myLists.length > 0) {\n\n            // console.log('要開始渲染資料！my!', myLists)\n            return (myLists.map(myList => {\n                // console.log('每一筆資料 my：：：', myList)\n                return (\n                    <RecipeListItem\n                        recipe={myList}\n                        key={myList.title}\n                        onRecipeSelect={myList => {\n                            if (myList.href.length > 0) {\n                                disPatch(showRecipe(myList.href))\n                            } else {\n                                message.error(`No link here`, 2.5);\n                            }\n                        }\n                        }\n                    />\n                )\n            }))\n        }\n    }\n\n    return (\n        <Form\n            {...layout}\n            ref={formRef} name=\"control-ref\" onFinish={() => onFinish()}\n        >\n\n            <Form.Item name=\"title\" label=\"Recipe Title\" rules={[{ required: true }]}>\n                <Input placeholder=\"e.g spaghetti, sushi, fries\" value={myTitle} onChange={e => onInputMyTitle(e.target.value)} />\n            </Form.Item>\n            <Form.Item name=\"ingredients\" label=\"Ingredients\" rules={[{ required: true }]}>\n                <Input placeholder=\"e.g onion, garlic, bread, etc\" value={myIngredients} onChange={e => onInputMyIngredients(e.target.value)} />\n            </Form.Item>\n            <Form.Item name=\"link\" label=\"Recipe Link\" rules={[{ required: false }]}>\n                <Input placeholder=\"recipe link...\" value={myLink} onChange={e => onInputMyLink(e.target.value)} />\n            </Form.Item>\n            <Form.Item name=\"image link\" label=\"Image\" rules={[{ required: false }]}>\n                <Input placeholder=\"recipe image link...\" value={myImageLink} onChange={e => onInputMyImageLink(e.target.value)} />\n            </Form.Item>\n            <Form.Item {...tailLayout}>\n                <Button style={{ marginRight: 8 }} type=\"primary\" htmlType=\"submit\" onClick={() => saveToStorage()}>Submit</Button>\n                <Button htmlType=\"button\" onClick={() => onReset()}>Reset</Button>\n            </Form.Item>\n            <ul className=\"list-group\">\n                {getMyRecipeItems()}\n            </ul>\n        </Form >\n\n\n\n    )\n\n\n\n}\n"]},"metadata":{},"sourceType":"module"}