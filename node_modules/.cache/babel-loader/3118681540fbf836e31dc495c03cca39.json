{"ast":null,"code":"import axios from 'axios';\nexport const FETCH_RECIPES = 'fetch_recipes';\nexport const FETCH_STORAGE_RECIPES = 'fetch_storage_recipes';\nexport const SAVE_TO_STORAGE = 'save_to_storage';\nexport const SEARCH_LISTS = 'search_lists';\nexport const DEL_ITEM = 'del_item';\nexport const SHOW_RECIPE = 'show_recipe';\nexport const CHANGE_TAB = 'change_tab';\nexport function changeTabNumber(newName) {\n  return {\n    type: CHANGE_TAB,\n    payload: {\n      newName: newName\n    }\n  };\n}\nexport function fetchStorageRecipes() {\n  let loadDatas = JSON.parse(localStorage.getItem('myDatas'));\n  return {\n    type: FETCH_STORAGE_RECIPES,\n    payload: loadDatas\n  };\n}\nexport function saveToStorage(saveKey, saveValue) {\n  localStorage.setItem(saveKey, JSON.stringify(saveValue));\n  return {\n    type: SAVE_TO_STORAGE\n  };\n}\nexport function searchLists(term, fromLists) {\n  const re = new RegExp(`${term}`);\n  const sLists = fromLists.filter(record => record.title.match(re) || record.ingredients.match(re));\n  return {\n    type: SEARCH_LISTS,\n    payload: sLists\n  };\n}\nexport function delItem(item, fromLists) {\n  const index = fromLists.findIndex(food => food.id === item.id);\n  fromLists.splice(index, 1);\n  return {\n    type: DEL_ITEM,\n    payload: fromLists\n  };\n}\nexport function fetchRecipes(term) {\n  return async dispatch => {\n    const url = `/api/?q=${term}`;\n    const request = await axios.get(url);\n    dispatch({\n      type: FETCH_RECIPES,\n      payload: request\n    });\n  };\n}\nexport function showRecipe(url) {\n  return {\n    type: SHOW_RECIPE,\n    payload: url\n  };\n}","map":{"version":3,"sources":["/Users/avon/Documents/Projects/web/github_project/my_recipes_builder/src/actions/index.js"],"names":["axios","FETCH_RECIPES","FETCH_STORAGE_RECIPES","SAVE_TO_STORAGE","SEARCH_LISTS","DEL_ITEM","SHOW_RECIPE","CHANGE_TAB","changeTabNumber","newName","type","payload","fetchStorageRecipes","loadDatas","JSON","parse","localStorage","getItem","saveToStorage","saveKey","saveValue","setItem","stringify","searchLists","term","fromLists","re","RegExp","sLists","filter","record","title","match","ingredients","delItem","item","index","findIndex","food","id","splice","fetchRecipes","dispatch","url","request","get","showRecipe"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,qBAAqB,GAAG,uBAA9B;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,YAAY,GAAG,cAArB;AACP,OAAO,MAAMC,QAAQ,GAAG,UAAjB;AACP,OAAO,MAAMC,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,UAAU,GAAG,YAAnB;AAEP,OAAO,SAASC,eAAT,CAAyBC,OAAzB,EAAkC;AACrC,SAAO;AACHC,IAAAA,IAAI,EAAEH,UADH;AAEHI,IAAAA,OAAO,EAAE;AAAEF,MAAAA,OAAO,EAAEA;AAAX;AAFN,GAAP;AAIH;AAED,OAAO,SAASG,mBAAT,GAA+B;AAClC,MAAIC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CAAhB;AACA,SAAO;AACHP,IAAAA,IAAI,EAAER,qBADH;AAEHS,IAAAA,OAAO,EAAEE;AAFN,GAAP;AAIH;AAED,OAAO,SAASK,aAAT,CAAuBC,OAAvB,EAAgCC,SAAhC,EAA2C;AAC9CJ,EAAAA,YAAY,CAACK,OAAb,CAAqBF,OAArB,EAA8BL,IAAI,CAACQ,SAAL,CAAeF,SAAf,CAA9B;AACA,SAAO;AACHV,IAAAA,IAAI,EAAEP;AADH,GAAP;AAGH;AAED,OAAO,SAASoB,WAAT,CAAqBC,IAArB,EAA2BC,SAA3B,EAAsC;AACzC,QAAMC,EAAE,GAAG,IAAIC,MAAJ,CAAY,GAAEH,IAAK,EAAnB,CAAX;AACA,QAAMI,MAAM,GAAGH,SAAS,CAACI,MAAV,CAAiBC,MAAM,IAAKA,MAAM,CAACC,KAAP,CAAaC,KAAb,CAAmBN,EAAnB,KAA0BI,MAAM,CAACG,WAAP,CAAmBD,KAAnB,CAAyBN,EAAzB,CAAtD,CAAf;AACA,SAAO;AACHhB,IAAAA,IAAI,EAAEN,YADH;AAEHO,IAAAA,OAAO,EAAEiB;AAFN,GAAP;AAIH;AAED,OAAO,SAASM,OAAT,CAAiBC,IAAjB,EAAuBV,SAAvB,EAAkC;AACrC,QAAMW,KAAK,GAAGX,SAAS,CAACY,SAAV,CAAoBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYJ,IAAI,CAACI,EAA7C,CAAd;AACAd,EAAAA,SAAS,CAACe,MAAV,CAAiBJ,KAAjB,EAAwB,CAAxB;AACA,SAAO;AACH1B,IAAAA,IAAI,EAAEL,QADH;AAEHM,IAAAA,OAAO,EAAEc;AAFN,GAAP;AAIH;AAED,OAAO,SAASgB,YAAT,CAAsBjB,IAAtB,EAA4B;AAE/B,SAAO,MAAOkB,QAAP,IAAoB;AACvB,UAAMC,GAAG,GAAI,WAAUnB,IAAK,EAA5B;AACA,UAAMoB,OAAO,GAAG,MAAM5C,KAAK,CAAC6C,GAAN,CAAUF,GAAV,CAAtB;AAEAD,IAAAA,QAAQ,CAAC;AACLhC,MAAAA,IAAI,EAAET,aADD;AAELU,MAAAA,OAAO,EAAEiC;AAFJ,KAAD,CAAR;AAKH,GATD;AAUH;AAED,OAAO,SAASE,UAAT,CAAoBH,GAApB,EAAyB;AAC5B,SAAO;AACHjC,IAAAA,IAAI,EAAEJ,WADH;AAEHK,IAAAA,OAAO,EAAEgC;AAFN,GAAP;AAIH","sourcesContent":["import axios from 'axios'\nexport const FETCH_RECIPES = 'fetch_recipes'\nexport const FETCH_STORAGE_RECIPES = 'fetch_storage_recipes'\nexport const SAVE_TO_STORAGE = 'save_to_storage'\nexport const SEARCH_LISTS = 'search_lists'\nexport const DEL_ITEM = 'del_item'\nexport const SHOW_RECIPE = 'show_recipe'\nexport const CHANGE_TAB = 'change_tab'\n\nexport function changeTabNumber(newName) {\n    return {\n        type: CHANGE_TAB,\n        payload: { newName: newName },\n    }\n}\n\nexport function fetchStorageRecipes() {\n    let loadDatas = JSON.parse(localStorage.getItem('myDatas'))\n    return {\n        type: FETCH_STORAGE_RECIPES,\n        payload: loadDatas\n    }\n}\n\nexport function saveToStorage(saveKey, saveValue) {\n    localStorage.setItem(saveKey, JSON.stringify(saveValue))\n    return {\n        type: SAVE_TO_STORAGE\n    }\n}\n\nexport function searchLists(term, fromLists) {\n    const re = new RegExp(`${term}`);\n    const sLists = fromLists.filter(record => (record.title.match(re) || record.ingredients.match(re)))\n    return {\n        type: SEARCH_LISTS,\n        payload: sLists\n    }\n}\n\nexport function delItem(item, fromLists) {\n    const index = fromLists.findIndex(food => food.id === item.id);\n    fromLists.splice(index, 1);\n    return {\n        type: DEL_ITEM,\n        payload: fromLists\n    }\n}\n\nexport function fetchRecipes(term) {\n\n    return async (dispatch) => {\n        const url = `/api/?q=${term}`\n        const request = await axios.get(url)\n\n        dispatch({\n            type: FETCH_RECIPES,\n            payload: request\n        })\n\n    }\n}\n\nexport function showRecipe(url) {\n    return {\n        type: SHOW_RECIPE,\n        payload: url,\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}