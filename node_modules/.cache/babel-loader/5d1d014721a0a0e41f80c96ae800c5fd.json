{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/avon/Documents/Projects/web/my-recipe/src/components/form_list.js\";\nimport React, { useState } from 'react';\nimport 'antd/dist/antd.css';\nimport { Form, Input, Button, Radio } from 'antd';\nimport { FormInstance } from 'antd/lib/form'; // import { useDispatch } from 'redux-react-hook'\n\nimport _ from 'lodash';\nexport default function FormList(props) {\n  // const disPatch = useDispatch()\n  // const [term, setTerm] = useState('')\n  // const onInputChange = (term) => {\n  //     const debouncedFetchRecipes = _.debounce(term => { disPatch(fetchRecipes(term)) }, 300)\n  //     setTerm(term)\n  //     debouncedFetchRecipes(term)\n  // }\n  const formRef = /*#__PURE__*/React.createRef(); // const [form] = Form.useForm();\n\n  const formLayout = 'vertical';\n  const tailLayout = {\n    wrapperCol: {\n      offset: 8,\n      span: 16\n    }\n  };\n\n  const onFinish = values => {\n    console.log(values);\n  };\n\n  const onReset = () => {\n    formRef.current.resetFields();\n  };\n\n  return (\n    /*#__PURE__*/\n    // <div className=\"search-bar\">\n    //     <input\n    //         autoFocus\n    //         value={term}\n    //         onChange={e => onInputChange(e.target.value)}\n    //         placeholder=\"Search By Ingredients...\"\n    //     />\n    // </div>\n    _jsxDEV(Form // {...formItemLayout}\n    , {\n      layout: formLayout // form={form}\n      ,\n      initialValues: {\n        layout: formLayout\n      },\n      ref: this.formRef,\n      name: \"control-ref\",\n      onFinish: this.onFinish // onValuesChange={onFormLayoutChange}\n      ,\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Field A\",\n        rules: [{\n          required: true\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"input placeholder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Field B\",\n        rules: [{\n          required: true\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"input placeholder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...tailLayout,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          htmlType: \"button\",\n          onClick: onReset,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)\n  );\n}\n_c = FormList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormList\");","map":{"version":3,"sources":["/Users/avon/Documents/Projects/web/my-recipe/src/components/form_list.js"],"names":["React","useState","Form","Input","Button","Radio","FormInstance","_","FormList","props","formRef","createRef","formLayout","tailLayout","wrapperCol","offset","span","onFinish","values","console","log","onReset","current","resetFields","layout","required"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,oBAAP;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,EAA8BC,KAA9B,QAA2C,MAA3C;AACA,SAASC,YAAT,QAA6B,eAA7B,C,CACA;;AACA,OAAOC,CAAP,MAAc,QAAd;AAGA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACpC;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA,QAAMC,OAAO,gBAAGV,KAAK,CAACW,SAAN,EAAhB,CAVoC,CAWpC;;AACA,QAAMC,UAAU,GAAG,UAAnB;AACA,QAAMC,UAAU,GAAG;AACfC,IAAAA,UAAU,EAAE;AACRC,MAAAA,MAAM,EAAE,CADA;AAERC,MAAAA,IAAI,EAAE;AAFE;AADG,GAAnB;;AAOA,QAAMC,QAAQ,GAAIC,MAAD,IAAY;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACH,GAFD;;AAGA,QAAMG,OAAO,GAAG,MAAM;AAClBX,IAAAA,OAAO,CAACY,OAAR,CAAgBC,WAAhB;AACH,GAFD;;AAIA;AAAA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAC,IAAD,CACI;AADJ;AAEI,MAAA,MAAM,EAAEX,UAFZ,CAGI;AAHJ;AAII,MAAA,aAAa,EAAE;AACXY,QAAAA,MAAM,EAAEZ;AADG,OAJnB;AAOI,MAAA,GAAG,EAAE,KAAKF,OAPd;AAOuB,MAAA,IAAI,EAAC,aAP5B;AAO0C,MAAA,QAAQ,EAAE,KAAKO,QAPzD,CAQA;AARA;AAAA,8BAWI,QAAC,IAAD,CAAM,IAAN;AAAW,QAAA,KAAK,EAAC,SAAjB;AAA2B,QAAA,KAAK,EAAE,CAAC;AAAEQ,UAAAA,QAAQ,EAAE;AAAZ,SAAD,CAAlC;AAAA,+BACI,QAAC,KAAD;AAAO,UAAA,WAAW,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAXJ,eAcI,QAAC,IAAD,CAAM,IAAN;AAAW,QAAA,KAAK,EAAC,SAAjB;AAA2B,QAAA,KAAK,EAAE,CAC9B;AACIA,UAAAA,QAAQ,EAAE;AADd,SAD8B,CAAlC;AAAA,+BAKI,QAAC,KAAD;AAAO,UAAA,WAAW,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,cAdJ,eAqBI,QAAC,IAAD,CAAM,IAAN,OAAeZ,UAAf;AAAA,gCACI,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,MAAD;AAAQ,UAAA,QAAQ,EAAC,QAAjB;AAA0B,UAAA,OAAO,EAAEQ,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cArBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AATJ;AAwCH;KAnEuBb,Q","sourcesContent":["import React, { useState } from 'react'\nimport 'antd/dist/antd.css';\nimport { Form, Input, Button, Radio } from 'antd';\nimport { FormInstance } from 'antd/lib/form';\n// import { useDispatch } from 'redux-react-hook'\nimport _ from 'lodash'\n\n\nexport default function FormList(props) {\n    // const disPatch = useDispatch()\n\n    // const [term, setTerm] = useState('')\n\n    // const onInputChange = (term) => {\n    //     const debouncedFetchRecipes = _.debounce(term => { disPatch(fetchRecipes(term)) }, 300)\n    //     setTerm(term)\n    //     debouncedFetchRecipes(term)\n    // }\n    const formRef = React.createRef();\n    // const [form] = Form.useForm();\n    const formLayout = 'vertical'\n    const tailLayout = {\n        wrapperCol: {\n            offset: 8,\n            span: 16,\n        },\n    };\n\n    const onFinish = (values) => {\n        console.log(values);\n    };\n    const onReset = () => {\n        formRef.current.resetFields();\n    };\n\n    return (\n        // <div className=\"search-bar\">\n        //     <input\n        //         autoFocus\n        //         value={term}\n        //         onChange={e => onInputChange(e.target.value)}\n        //         placeholder=\"Search By Ingredients...\"\n        //     />\n        // </div>\n        <Form\n            // {...formItemLayout}\n            layout={formLayout}\n            // form={form}\n            initialValues={{\n                layout: formLayout,\n            }}\n            ref={this.formRef} name=\"control-ref\" onFinish={this.onFinish}\n        // onValuesChange={onFormLayoutChange}\n        >\n\n            <Form.Item label=\"Field A\" rules={[{ required: true }]}>\n                <Input placeholder=\"input placeholder\" />\n            </Form.Item>\n            <Form.Item label=\"Field B\" rules={[\n                {\n                    required: true,\n                },\n            ]}>\n                <Input placeholder=\"input placeholder\" />\n            </Form.Item>\n            <Form.Item {...tailLayout}>\n                <Button type=\"primary\">Submit</Button>\n                <Button htmlType=\"button\" onClick={onReset}>Reset</Button>\n            </Form.Item>\n        </Form>\n\n    )\n\n\n\n}\n"]},"metadata":{},"sourceType":"module"}