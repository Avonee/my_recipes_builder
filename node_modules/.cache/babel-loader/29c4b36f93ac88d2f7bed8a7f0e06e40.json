{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/avon/Documents/Projects/web/my-recipe/src/components/recipe_list.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, dispatch } from 'redux';\nimport _ from 'lodash';\nimport RecipeListItem from './recipe_list_item';\nimport { showRecipe } from '../actions';\n\nfunction RecipeList(props) {\n  // state = {\n  //   dataSource: [],\n  // }\n  // componentDidMount() {\n  //   fetchData()\n  // }\n  // fetchData() {\n  //   const REQUEST_URL = 'http://www.recipepuppy.com/'\n  //   fetch(REQUEST_URL)\n  //     .then((response) => response.json())\n  //     .then((responseData) => {\n  //       let getAll = []\n  //       responseData.map(a => {\n  //         if (a.addToMyList == true) {\n  //           getAll.push(a)\n  //         }\n  //       })\n  //       this.setState({ dataSource: getAll })\n  //     })\n  //     .catch((err) => {\n  //       console.log('error 是 ', err)\n  //     })\n  // }\n  const getRecipeItems = () => {\n    return this.props.recipes.map(recipe => {\n      return /*#__PURE__*/_jsxDEV(RecipeListItem, {\n        recipe: recipe,\n        onRecipeSelect: recipe => this.props.showRecipe(recipe.href)\n      }, recipe.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"list-group\",\n    children: getRecipeItems()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n\n_c = RecipeList;\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    showRecipe\n  }, dispatch);\n}\n\nfunction mapStateToProps({\n  recipes\n}) {\n  return {\n    recipes\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RecipeList);\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipeList\");","map":{"version":3,"sources":["/Users/avon/Documents/Projects/web/my-recipe/src/components/recipe_list.js"],"names":["React","connect","bindActionCreators","dispatch","_","RecipeListItem","showRecipe","RecipeList","props","getRecipeItems","recipes","map","recipe","href","title","mapDispatchToProps","mapStateToProps"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,cAAP,MAA2B,oBAA3B;AACA,SAASC,UAAT,QAA2B,YAA3B;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAEvB;AACA;AACA;AAGA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AAEA,QAAMC,cAAc,GAAG,MAAM;AACzB,WAAQ,KAAKD,KAAL,CAAWE,OAAX,CAAmBC,GAAnB,CAAuBC,MAAM,IAAI;AACrC,0BACI,QAAC,cAAD;AACI,QAAA,MAAM,EAAEA,MADZ;AAGI,QAAA,cAAc,EAAEA,MAAM,IAAI,KAAKJ,KAAL,CAAWF,UAAX,CAAsBM,MAAM,CAACC,IAA7B;AAH9B,SAESD,MAAM,CAACE,KAFhB;AAAA;AAAA;AAAA;AAAA,cADJ;AAOH,KARO,CAAR;AAUH,GAXD;;AAcA,sBACI;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA,cACKL,cAAc;AADnB;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;KAvDQF,U;;AA0DT,SAASQ,kBAAT,CAA4BZ,QAA5B,EAAsC;AAClC,SAAOD,kBAAkB,CAAC;AAAEI,IAAAA;AAAF,GAAD,EAAiBH,QAAjB,CAAzB;AACH;;AAED,SAASa,eAAT,CAAyB;AAAEN,EAAAA;AAAF,CAAzB,EAAsC;AAClC,SAAO;AAAEA,IAAAA;AAAF,GAAP;AACH;;AAED,eAAeT,OAAO,CAACe,eAAD,EAAkBD,kBAAlB,CAAP,CAA6CR,UAA7C,CAAf","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators, dispatch } from 'redux'\nimport _ from 'lodash'\nimport RecipeListItem from './recipe_list_item'\nimport { showRecipe } from '../actions'\n\nfunction RecipeList(props) {\n\n    // state = {\n    //   dataSource: [],\n    // }\n\n\n    // componentDidMount() {\n    //   fetchData()\n\n    // }\n\n    // fetchData() {\n    //   const REQUEST_URL = 'http://www.recipepuppy.com/'\n\n    //   fetch(REQUEST_URL)\n    //     .then((response) => response.json())\n    //     .then((responseData) => {\n    //       let getAll = []\n\n    //       responseData.map(a => {\n    //         if (a.addToMyList == true) {\n    //           getAll.push(a)\n    //         }\n    //       })\n\n    //       this.setState({ dataSource: getAll })\n\n\n    //     })\n    //     .catch((err) => {\n    //       console.log('error 是 ', err)\n    //     })\n    // }\n\n    const getRecipeItems = () => {\n        return (this.props.recipes.map(recipe => {\n            return (\n                <RecipeListItem\n                    recipe={recipe}\n                    key={recipe.title}\n                    onRecipeSelect={recipe => this.props.showRecipe(recipe.href)}\n                />\n            )\n        })\n        )\n    }\n\n\n    return (\n        <ul className=\"list-group\">\n            {getRecipeItems()}\n        </ul>\n    )\n\n}\n\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({ showRecipe }, dispatch)\n}\n\nfunction mapStateToProps({ recipes }) {\n    return { recipes }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RecipeList)\n"]},"metadata":{},"sourceType":"module"}