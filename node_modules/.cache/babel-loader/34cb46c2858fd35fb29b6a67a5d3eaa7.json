{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/avon/Documents/Projects/web/my-recipe/src/components/form_list.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport 'antd/dist/antd.css';\nimport { Form, Input, Button, message, Modal } from 'antd';\nimport { useDispatch } from 'redux-react-hook';\nimport RecipeListItem from './recipe_list_item';\nimport { showRecipe } from '../actions';\nimport _ from 'lodash'; // const MOCK_LIST = [\n//     {\n//         \"title\": \"Copycat Chilis Southwest Egg Rolls Recipe\",\n//         \"href\": \"\",\n//         \"ingredients\": \"avocado, buttermilk, black beans, cayenne, chicken, chili powder, corn, cumin, dill weed, parsley, flour tortillas, garlic powder, green onion, mayonnaise, monterey jack cheese, onions, onion powder, black pepper, red pepper, avocado, salt, salt, sour cream, spinach, tomato, vegetable oil, white vinegar\",\n//         \"thumbnail\": \"\"\n//     },\n//     {\n//         \"title\": \"Vegan Egg White Substitute Recipe\",\n//         \"href\": \"http://www.grouprecipes.com/11755/vegan-egg-white-substitute.html\",\n//         \"ingredients\": \"flax seed, water\",\n//         \"thumbnail\": \"\"\n//     },\n// ]\n\nexport default function FormList(props) {\n  _s();\n\n  const [myLists, setMyLists] = useState([]);\n  const [myTitle, setMyTitle] = useState('');\n  const [myIngredients, setMyIngredients] = useState('');\n  const [myLink, setMyLink] = useState('');\n  const [myImageLink, setMyImageLink] = useState('');\n  const [editID, setEditID] = useState(null);\n  const [startEdit, setStartEdit] = useState(false);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [searchItem, setSearchItem] = useState('');\n  const [searchLists, setSearchLists] = useState([]);\n  const disPatch = useDispatch(); // const loadAll = useCallback(() => {\n  //     // load from storage\n  //     loadStorage()\n  // }, [])\n  // useEffect(() => {\n  //     //for temporary\n  //     // localStorage.clear()\n  //     loadAll()\n  //     // setMyLists(MOCK_LIST) // for test\n  // }, [loadAll])\n\n  const searchMyLists = term => {\n    const re = new RegExp(`${term}`);\n    const sLists = myLists.filter(record => record.title.match(re) || record.ingredients.match(re));\n    setSearchLists(sLists);\n  };\n\n  const onInputChange = term => {\n    const debouncedFetchRecipes = _.debounce(term => {\n      searchMyLists(term);\n    }, 300);\n\n    setSearchItem(term);\n    debouncedFetchRecipes(term);\n  };\n\n  const showAddForm = () => {\n    setIsModalVisible(true);\n    formRef.current.resetFields();\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n    setStartEdit(false);\n  };\n\n  const formRef = /*#__PURE__*/React.createRef(); // const [form] = Form.useForm();\n  // const formLayout = 'vertical'\n\n  const layout = {\n    labelCol: {\n      span: 8,\n      margin: 20\n    },\n    wrapperCol: {\n      span: 16,\n      margin: 20\n    }\n  };\n  const tailLayout = {\n    wrapperCol: {\n      offset: 8,\n      span: 16\n    }\n  }; // const onFinish = (values) => {\n  //     console.log(values);\n  // };\n\n  const onReset = () => {\n    formRef.current.resetFields();\n  };\n\n  const onInputMyTitle = myt => {\n    setMyTitle(myt);\n  };\n\n  const onInputMyIngredients = myI => {\n    setMyIngredients(myI);\n  };\n\n  const onInputMyLink = myL => {\n    setMyLink(myL);\n  };\n\n  const onInputMyImageLink = myIL => {\n    setMyImageLink(myIL);\n  };\n\n  const loadStorage = () => {\n    let loadDatas = JSON.parse(localStorage.getItem('myDatas'));\n\n    if (loadDatas) {\n      setMyLists(loadDatas);\n    }\n  };\n\n  const saveToStorage = () => {\n    // console.log('現在資料是？', myTitle, myIngredients)\n    if (myTitle !== '' && myIngredients !== '') {\n      // console.log('要來存囉！')\n      let addOne = [{\n        \"id\": startEdit === false ? myLists.length === 0 ? 0 : myLists[myLists.length - 1].id + 1 : editID,\n        \"title\": myTitle,\n        \"href\": myLink !== null && myLink !== void 0 ? myLink : \"\",\n        \"ingredients\": myIngredients,\n        \"thumbnail\": myImageLink !== null && myImageLink !== void 0 ? myImageLink : \"\",\n        'removeIcon': true,\n        'editIcon': true\n      }];\n      let newList;\n\n      if (startEdit === false) {\n        newList = myLists.concat(addOne);\n      } else {\n        setStartEdit(false);\n        const index = myLists.findIndex(food => food.id === editID);\n        myLists.splice(index, 1, addOne[0]);\n        newList = myLists;\n      }\n\n      setMyLists(newList);\n      localStorage.setItem('myDatas', JSON.stringify(newList));\n    }\n\n    setIsModalVisible(false);\n  };\n\n  const editRecipe = recipe => {\n    formRef.current.setFieldsValue({\n      title: recipe.title,\n      ingredients: recipe.ingredients,\n      link: recipe.href,\n      imagelink: recipe.thumbnail\n    });\n    setEditID(recipe.id);\n    setStartEdit(true); // console.log('要修改的id在？？', recipe.id)\n\n    setIsModalVisible(true);\n  };\n\n  const removeRecipe = recipe => {\n    // for (var i = 0; i < myLists.length; i++) {\n    //     if (myLists[i].title === recipe.title) {\n    //         myLists.splice(i, 1);\n    //     }\n    // }\n    const index = myLists.findIndex(food => food.id === recipe.id);\n    myLists.splice(index, 1);\n    setMyLists(myLists);\n    localStorage.setItem('myDatas', JSON.stringify(myLists));\n    loadAll();\n  };\n\n  const getMyRecipeItems = () => {\n    if (myLists.length > 0) {\n      let renderLists = [];\n\n      if (searchItem !== '') {\n        renderLists = searchLists;\n      } else {\n        renderLists = myLists;\n      }\n\n      return renderLists.map(myList => {\n        // console.log('每一筆資料 my：：：', myList)\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(RecipeListItem, {\n            recipe: myList,\n            onRecipeSelect: myList => {\n              if (myList.href.length > 0) {\n                disPatch(showRecipe(myList.href));\n              } else {\n                message.error(`No link here`, 2.5);\n              }\n            }\n          }, myList.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'relative'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                position: 'absolute',\n                top: -40,\n                right: 0\n              },\n              children: [myList.editIcon === true ? /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"../assets/images/edit.png\",\n                alt: \"edit image\",\n                onClick: () => editRecipe(myList),\n                style: {\n                  width: 20,\n                  height: 20,\n                  marginRight: 8\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 61\n              }, this) : null, myList.removeIcon === true ? /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"../assets/images/close.png\",\n                alt: \"delete image\",\n                onClick: () => removeRecipe(myList),\n                style: {\n                  width: 20,\n                  height: 20,\n                  marginRight: 8\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 63\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, { ...layout,\n    ref: formRef,\n    name: \"control-ref\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        autoFocus: true,\n        value: searchItem,\n        onChange: e => onInputChange(e.target.value),\n        placeholder: \"Search By Ingredients...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...tailLayout,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          marginRight: 8\n        },\n        type: \"primary\",\n        onClick: () => showAddForm(),\n        children: \"ADD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Basic Modal\",\n      visible: isModalVisible,\n      onCancel: handleCancel,\n      footer: [/*#__PURE__*/_jsxDEV(Form.Item, { ...tailLayout,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            marginRight: 8\n          },\n          type: \"primary\",\n          htmlType: \"submit\",\n          onClick: () => saveToStorage(),\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          htmlType: \"button\",\n          onClick: () => onReset(),\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 26\n      }, this)],\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"title\",\n        label: \"Recipe Title\",\n        rules: [{\n          required: true\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"e.g spaghetti, sushi, fries\",\n          value: myTitle,\n          onChange: e => onInputMyTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"ingredients\",\n        label: \"Ingredients\",\n        rules: [{\n          required: true\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"e.g onion, garlic, bread, etc\",\n          value: myIngredients,\n          onChange: e => onInputMyIngredients(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"link\",\n        label: \"Recipe Link\",\n        rules: [{\n          required: false\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"recipe link...\",\n          value: myLink,\n          onChange: e => onInputMyLink(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"imagelink\",\n        label: \"Image\",\n        rules: [{\n          required: false\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"recipe image link...\",\n          value: myImageLink,\n          onChange: e => onInputMyImageLink(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: getMyRecipeItems()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FormList, \"TI7tnad9yV5FHTAbw+kbly5VbgQ=\", false, function () {\n  return [useDispatch];\n});\n\n_c = FormList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormList\");","map":{"version":3,"sources":["/Users/avon/Documents/Projects/web/my-recipe/src/components/form_list.js"],"names":["React","useState","useEffect","useCallback","Form","Input","Button","message","Modal","useDispatch","RecipeListItem","showRecipe","_","FormList","props","myLists","setMyLists","myTitle","setMyTitle","myIngredients","setMyIngredients","myLink","setMyLink","myImageLink","setMyImageLink","editID","setEditID","startEdit","setStartEdit","isModalVisible","setIsModalVisible","searchItem","setSearchItem","searchLists","setSearchLists","disPatch","searchMyLists","term","re","RegExp","sLists","filter","record","title","match","ingredients","onInputChange","debouncedFetchRecipes","debounce","showAddForm","formRef","current","resetFields","handleCancel","createRef","layout","labelCol","span","margin","wrapperCol","tailLayout","offset","onReset","onInputMyTitle","myt","onInputMyIngredients","myI","onInputMyLink","myL","onInputMyImageLink","myIL","loadStorage","loadDatas","JSON","parse","localStorage","getItem","saveToStorage","addOne","length","id","newList","concat","index","findIndex","food","splice","setItem","stringify","editRecipe","recipe","setFieldsValue","link","href","imagelink","thumbnail","removeRecipe","loadAll","getMyRecipeItems","renderLists","map","myList","error","position","top","right","editIcon","width","height","marginRight","removeIcon","e","target","value","required"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react'\nimport 'antd/dist/antd.css';\nimport { Form, Input, Button, message, Modal } from 'antd';\nimport { useDispatch } from 'redux-react-hook'\nimport RecipeListItem from './recipe_list_item'\nimport { showRecipe } from '../actions'\nimport _ from 'lodash'\n\n// const MOCK_LIST = [\n//     {\n//         \"title\": \"Copycat Chilis Southwest Egg Rolls Recipe\",\n//         \"href\": \"\",\n//         \"ingredients\": \"avocado, buttermilk, black beans, cayenne, chicken, chili powder, corn, cumin, dill weed, parsley, flour tortillas, garlic powder, green onion, mayonnaise, monterey jack cheese, onions, onion powder, black pepper, red pepper, avocado, salt, salt, sour cream, spinach, tomato, vegetable oil, white vinegar\",\n//         \"thumbnail\": \"\"\n//     },\n//     {\n//         \"title\": \"Vegan Egg White Substitute Recipe\",\n//         \"href\": \"http://www.grouprecipes.com/11755/vegan-egg-white-substitute.html\",\n//         \"ingredients\": \"flax seed, water\",\n//         \"thumbnail\": \"\"\n//     },\n// ]\n\nexport default function FormList(props) {\n\n    const [myLists, setMyLists] = useState([])\n    const [myTitle, setMyTitle] = useState('')\n    const [myIngredients, setMyIngredients] = useState('')\n    const [myLink, setMyLink] = useState('')\n    const [myImageLink, setMyImageLink] = useState('')\n    const [editID, setEditID] = useState(null)\n    const [startEdit, setStartEdit] = useState(false)\n    const [isModalVisible, setIsModalVisible] = useState(false);\n    const [searchItem, setSearchItem] = useState('')\n    const [searchLists, setSearchLists] = useState([])\n\n    const disPatch = useDispatch()\n\n    // const loadAll = useCallback(() => {\n    //     // load from storage\n    //     loadStorage()\n    // }, [])\n\n    // useEffect(() => {\n    //     //for temporary\n    //     // localStorage.clear()\n\n    //     loadAll()\n    //     // setMyLists(MOCK_LIST) // for test\n    // }, [loadAll])\n\n\n    const searchMyLists = (term) => {\n        const re = new RegExp(`${term}`);\n        const sLists = myLists.filter(record => (record.title.match(re) || record.ingredients.match(re)))\n        setSearchLists(sLists)\n    }\n\n    const onInputChange = (term) => {\n        const debouncedFetchRecipes = _.debounce(term => { searchMyLists(term) }, 300)\n        setSearchItem(term)\n        debouncedFetchRecipes(term)\n    }\n\n    const showAddForm = () => {\n        setIsModalVisible(true);\n        formRef.current.resetFields();\n    };\n    const handleCancel = () => {\n        setIsModalVisible(false);\n        setStartEdit(false)\n    };\n\n    const formRef = React.createRef();\n    // const [form] = Form.useForm();\n    // const formLayout = 'vertical'\n    const layout = {\n        labelCol: {\n            span: 8,\n            margin: 20\n        },\n        wrapperCol: {\n            span: 16,\n            margin: 20\n        },\n    };\n    const tailLayout = {\n        wrapperCol: {\n            offset: 8,\n            span: 16,\n        },\n    };\n\n    // const onFinish = (values) => {\n    //     console.log(values);\n    // };\n    const onReset = () => {\n        formRef.current.resetFields();\n    };\n    const onInputMyTitle = (myt) => {\n        setMyTitle(myt)\n    }\n    const onInputMyIngredients = (myI) => {\n        setMyIngredients(myI)\n    }\n    const onInputMyLink = (myL) => {\n        setMyLink(myL)\n    }\n    const onInputMyImageLink = (myIL) => {\n        setMyImageLink(myIL)\n    }\n    const loadStorage = () => {\n        let loadDatas = JSON.parse(localStorage.getItem('myDatas'))\n        if (loadDatas) {\n            setMyLists(loadDatas)\n        }\n    }\n    const saveToStorage = () => {\n        // console.log('現在資料是？', myTitle, myIngredients)\n        if (myTitle !== '' && myIngredients !== '') {\n            // console.log('要來存囉！')\n            let addOne = [{\n                \"id\": (startEdit === false) ? (myLists.length === 0 ? 0 : myLists[myLists.length - 1].id + 1) : editID,\n                \"title\": myTitle,\n                \"href\": myLink ?? \"\",\n                \"ingredients\": myIngredients,\n                \"thumbnail\": myImageLink ?? \"\",\n                'removeIcon': true,\n                'editIcon': true\n            }]\n\n            let newList\n            if (startEdit === false) {\n                newList = myLists.concat(addOne)\n            } else {\n                setStartEdit(false)\n                const index = myLists.findIndex(food => food.id === editID);\n                myLists.splice(index, 1, addOne[0])\n                newList = myLists\n            }\n\n            setMyLists(newList)\n            localStorage.setItem('myDatas', JSON.stringify(newList))\n\n        }\n        setIsModalVisible(false);\n    }\n\n    const editRecipe = (recipe) => {\n        formRef.current.setFieldsValue({\n            title: recipe.title,\n            ingredients: recipe.ingredients,\n            link: recipe.href,\n            imagelink: recipe.thumbnail\n        });\n        setEditID(recipe.id)\n        setStartEdit(true)\n        // console.log('要修改的id在？？', recipe.id)\n        setIsModalVisible(true);\n\n    }\n    const removeRecipe = (recipe) => {\n        // for (var i = 0; i < myLists.length; i++) {\n        //     if (myLists[i].title === recipe.title) {\n        //         myLists.splice(i, 1);\n        //     }\n        // }\n        const index = myLists.findIndex(food => food.id === recipe.id);\n        myLists.splice(index, 1);\n        setMyLists(myLists)\n        localStorage.setItem('myDatas', JSON.stringify(myLists))\n        loadAll()\n    }\n    const getMyRecipeItems = () => {\n\n        if (myLists.length > 0) {\n\n            let renderLists = []\n            if (searchItem !== '') {\n                renderLists = searchLists\n            } else {\n                renderLists = myLists\n            }\n\n            return (renderLists.map(myList => {\n                // console.log('每一筆資料 my：：：', myList)\n                return (\n                    <div>\n                        <RecipeListItem\n                            recipe={myList}\n                            key={myList.id}\n                            onRecipeSelect={myList => {\n                                if (myList.href.length > 0) {\n                                    disPatch(showRecipe(myList.href))\n                                } else {\n                                    message.error(`No link here`, 2.5);\n                                }\n                            }\n                            }\n                        />\n                        <div style={{ position: 'relative' }}>\n                            <div style={{ position: 'absolute', top: -40, right: 0 }}>\n                                {myList.editIcon === true ? <img src=\"../assets/images/edit.png\" alt=\"edit image\" onClick={() => editRecipe(myList)}\n                                    style={{ width: 20, height: 20, marginRight: 8 }}\n                                /> : null}\n                                {myList.removeIcon === true ? <img src=\"../assets/images/close.png\" alt=\"delete image\" onClick={() => removeRecipe(myList)}\n                                    style={{ width: 20, height: 20, marginRight: 8 }}\n                                /> : null}\n                            </div>\n                        </div>\n                    </div>\n                )\n            }))\n        }\n    }\n\n    return (\n        <Form\n            {...layout}\n            ref={formRef} name=\"control-ref\"\n        >\n            <div className=\"search-bar\">\n                <input\n                    autoFocus\n                    value={searchItem}\n                    onChange={e => onInputChange(e.target.value)}\n                    placeholder=\"Search By Ingredients...\"\n                />\n            </div>\n\n            <Form.Item {...tailLayout}>\n                <Button style={{ marginRight: 8 }} type=\"primary\" onClick={() => showAddForm()}>ADD</Button>\n            </Form.Item>\n            <Modal title=\"Basic Modal\" visible={isModalVisible}\n                onCancel={handleCancel}\n                footer={[<Form.Item {...tailLayout}>\n                    <Button style={{ marginRight: 8 }} type=\"primary\" htmlType=\"submit\" onClick={() => saveToStorage()}>Submit</Button>\n                    <Button htmlType=\"button\" onClick={() => onReset()}>Reset</Button>\n                </Form.Item>]}>\n                <Form.Item name=\"title\" label=\"Recipe Title\" rules={[{ required: true }]}>\n                    <Input placeholder=\"e.g spaghetti, sushi, fries\" value={myTitle} onChange={e => onInputMyTitle(e.target.value)} />\n                </Form.Item>\n                <Form.Item name=\"ingredients\" label=\"Ingredients\" rules={[{ required: true }]}>\n                    <Input placeholder=\"e.g onion, garlic, bread, etc\" value={myIngredients} onChange={e => onInputMyIngredients(e.target.value)} />\n                </Form.Item>\n                <Form.Item name=\"link\" label=\"Recipe Link\" rules={[{ required: false }]}>\n                    <Input placeholder=\"recipe link...\" value={myLink} onChange={e => onInputMyLink(e.target.value)} />\n                </Form.Item>\n                <Form.Item name=\"imagelink\" label=\"Image\" rules={[{ required: false }]}>\n                    <Input placeholder=\"recipe image link...\" value={myImageLink} onChange={e => onInputMyImageLink(e.target.value)} />\n                </Form.Item>\n            </Modal>\n\n            <ul className=\"list-group\">\n                {getMyRecipeItems()}\n            </ul>\n        </Form >\n    )\n}\n"]},"metadata":{},"sourceType":"module"}