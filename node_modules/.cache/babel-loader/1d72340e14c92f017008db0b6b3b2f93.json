{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/avon/Documents/Projects/web/my-recipe/src/components/form_list.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport 'antd/dist/antd.css';\nimport { Form, Input, Button, Radio, message } from 'antd';\nimport { useDispatch } from 'redux-react-hook';\nimport RecipeListItem from './recipe_list_item';\nimport { showRecipe } from '../actions';\nexport default function FormList(props) {\n  _s();\n\n  const [myLists, setMyLists] = useState([]);\n  const disPatch = useDispatch();\n  const formRef = /*#__PURE__*/React.createRef(); // const [form] = Form.useForm();\n  // const formLayout = 'vertical'\n\n  const layout = {\n    labelCol: {\n      span: 8,\n      margin: 20\n    },\n    wrapperCol: {\n      span: 16,\n      margin: 20\n    }\n  };\n  const tailLayout = {\n    wrapperCol: {\n      offset: 8,\n      span: 16\n    }\n  };\n\n  const onFinish = values => {\n    console.log(values);\n  };\n\n  const onReset = () => {\n    formRef.current.resetFields();\n  };\n\n  const getMyRecipeItems = () => {\n    console.log('要來列出my list了！！！', myLists);\n\n    if (myLists.length > 0) {\n      console.log('要開始渲染資料！my!', myLists);\n      return myLists.map(myList => {\n        console.log('每一筆資料 my：：：', myList);\n        return /*#__PURE__*/_jsxDEV(RecipeListItem, {\n          recipe: myList,\n          onRecipeSelect: myList => {\n            if (myList.href.length > 0) {\n              disPatch(showRecipe(myList.href));\n            } else {\n              message.error(`There's no link`, 2.5);\n            }\n          }\n        }, myList.title, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this);\n      });\n    }\n  };\n\n  return (\n    /*#__PURE__*/\n    // <div className=\"search-bar\">\n    //     <input\n    //         autoFocus\n    //         value={term}\n    //         onChange={e => onInputChange(e.target.value)}\n    //         placeholder=\"Search By Ingredients...\"\n    //     />\n    // </div>\n    _jsxDEV(Form // {...formItemLayout}\n    // layout={formLayout}\n    // form={form}\n    , { ...layout,\n      ref: formRef,\n      name: \"control-ref\",\n      onFinish: () => onFinish() // onValuesChange={onFormLayoutChange}\n      ,\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"title\",\n        label: \"Recipe Title\",\n        rules: [{\n          required: true\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"e.g spaghetti, sushi, fries\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"ingredients\",\n        label: \"Ingredients\",\n        rules: [{\n          required: true\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"e.g onion, garlic, bread, etc\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"link\",\n        label: \"Recipe Link\",\n        rules: [{\n          required: false\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"recipe link...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"image link\",\n        label: \"Image\",\n        rules: [{\n          required: false\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"recipe image link...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...tailLayout,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            marginRight: 8\n          },\n          type: \"primary\",\n          htmlType: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          htmlType: \"button\",\n          onClick: () => onReset(),\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-group\",\n        children: getMyRecipeItems()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)\n  );\n}\n\n_s(FormList, \"nteEDSN0sdq3Bzf6mmLQE4I35pM=\", false, function () {\n  return [useDispatch];\n});\n\n_c = FormList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormList\");","map":{"version":3,"sources":["/Users/avon/Documents/Projects/web/my-recipe/src/components/form_list.js"],"names":["React","useState","useEffect","Form","Input","Button","Radio","message","useDispatch","RecipeListItem","showRecipe","FormList","props","myLists","setMyLists","disPatch","formRef","createRef","layout","labelCol","span","margin","wrapperCol","tailLayout","offset","onFinish","values","console","log","onReset","current","resetFields","getMyRecipeItems","length","map","myList","href","error","title","required","marginRight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport 'antd/dist/antd.css';\nimport { Form, Input, Button, Radio, message } from 'antd';\nimport { useDispatch } from 'redux-react-hook'\nimport RecipeListItem from './recipe_list_item'\nimport { showRecipe } from '../actions'\n\nexport default function FormList(props) {\n\n    const [myLists, setMyLists] = useState([])\n    const disPatch = useDispatch()\n\n    const formRef = React.createRef();\n    // const [form] = Form.useForm();\n    // const formLayout = 'vertical'\n    const layout = {\n        labelCol: {\n            span: 8,\n            margin: 20\n        },\n        wrapperCol: {\n            span: 16,\n            margin: 20\n        },\n    };\n    const tailLayout = {\n        wrapperCol: {\n            offset: 8,\n            span: 16,\n        },\n    };\n\n    const onFinish = (values) => {\n        console.log(values);\n    };\n    const onReset = () => {\n        formRef.current.resetFields();\n    };\n    const getMyRecipeItems = () => {\n        console.log('要來列出my list了！！！', myLists)\n        if (myLists.length > 0) {\n\n            console.log('要開始渲染資料！my!', myLists)\n            return (myLists.map(myList => {\n                console.log('每一筆資料 my：：：', myList)\n                return (\n                    <RecipeListItem\n                        recipe={myList}\n                        key={myList.title}\n                        onRecipeSelect={myList => {\n                            if (myList.href.length > 0) {\n                                disPatch(showRecipe(myList.href))\n                            } else {\n                                message.error(`There's no link`, 2.5);\n                            }\n                        }\n                        }\n                    />\n                )\n            }))\n        }\n    }\n\n    return (\n        // <div className=\"search-bar\">\n        //     <input\n        //         autoFocus\n        //         value={term}\n        //         onChange={e => onInputChange(e.target.value)}\n        //         placeholder=\"Search By Ingredients...\"\n        //     />\n        // </div>\n        <Form\n            // {...formItemLayout}\n            // layout={formLayout}\n            // form={form}\n            {...layout}\n            ref={formRef} name=\"control-ref\" onFinish={() => onFinish()}\n        // onValuesChange={onFormLayoutChange}\n        >\n\n            <Form.Item name=\"title\" label=\"Recipe Title\" rules={[{ required: true }]}>\n                <Input placeholder=\"e.g spaghetti, sushi, fries\" />\n            </Form.Item>\n            <Form.Item name=\"ingredients\" label=\"Ingredients\" rules={[{ required: true }]}>\n                <Input placeholder=\"e.g onion, garlic, bread, etc\" />\n            </Form.Item>\n            <Form.Item name=\"link\" label=\"Recipe Link\" rules={[{ required: false }]}>\n                <Input placeholder=\"recipe link...\" />\n            </Form.Item>\n            <Form.Item name=\"image link\" label=\"Image\" rules={[{ required: false }]}>\n                <Input placeholder=\"recipe image link...\" />\n            </Form.Item>\n            <Form.Item {...tailLayout}>\n                <Button style={{ marginRight: 8 }} type=\"primary\" htmlType=\"submit\">Submit</Button>\n                <Button htmlType=\"button\" onClick={() => onReset()}>Reset</Button>\n            </Form.Item>\n\n\n            <ul className=\"list-group\">\n                {getMyRecipeItems()}\n            </ul>\n        </Form >\n\n\n\n    )\n\n\n\n}\n"]},"metadata":{},"sourceType":"module"}