{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/avon/Documents/Projects/web/my-recipe/src/components/recipe_list.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react'; // import { connect } from 'react-redux'\n// import { bindActionCreators, dispatch } from 'redux'\n\nimport { useMappedState, useDispatch } from 'redux-react-hook'; // import _ from 'lodash'\n\nimport RecipeListItem from './recipe_list_item';\nimport { showRecipe } from '../actions';\nexport default function RecipeList(props) {\n  _s();\n\n  const recipes = useMappedState(state => state);\n  const disPatch = useDispatch(); // state = {\n  //   dataSource: [],\n  // }\n  // componentDidMount() {\n  //   fetchData()\n  // }\n  // fetchData() {\n  //   const REQUEST_URL = 'http://www.recipepuppy.com/'\n  //   fetch(REQUEST_URL)\n  //     .then((response) => response.json())\n  //     .then((responseData) => {\n  //       let getAll = []\n  //       responseData.map(a => {\n  //         if (a.addToMyList == true) {\n  //           getAll.push(a)\n  //         }\n  //       })\n  //       this.setState({ dataSource: getAll })\n  //     })\n  //     .catch((err) => {\n  //       console.log('error 是 ', err)\n  //     })\n  // }\n\n  const getRecipeItems = () => {\n    console.log('要來列出list了！！！', {\n      recipes\n    });\n\n    if (recipes.recipes.length > 0) {\n      console.log('要開始渲染資料！', recipes.recipes);\n      recipes.recipes.map(recipe => {\n        return /*#__PURE__*/_jsxDEV(RecipeListItem, {\n          recipe: recipe,\n          onRecipeSelect: recipe => disPatch(showRecipe(recipe.href))\n        }, recipe.title, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"list-group\",\n    children: getRecipeItems()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n} // function mapDispatchToProps(dispatch) {\n//     return bindActionCreators({ showRecipe }, dispatch)\n// }\n// function mapStateToProps({ recipes }) {\n//     return { recipes }\n// }\n// export default connect(mapStateToProps, mapDispatchToProps)(RecipeList)\n\n_s(RecipeList, \"YbAndChZgpP+J24vKzD8QRY2RGk=\", false, function () {\n  return [useMappedState, useDispatch];\n});\n\n_c = RecipeList;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipeList\");","map":{"version":3,"sources":["/Users/avon/Documents/Projects/web/my-recipe/src/components/recipe_list.js"],"names":["React","useMappedState","useDispatch","RecipeListItem","showRecipe","RecipeList","props","recipes","state","disPatch","getRecipeItems","console","log","length","map","recipe","href","title"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;;AACA,SAASC,cAAT,EAAyBC,WAAzB,QAA4C,kBAA5C,C,CACA;;AACA,OAAOC,cAAP,MAA2B,oBAA3B;AACA,SAASC,UAAT,QAA2B,YAA3B;AAEA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACtC,QAAMC,OAAO,GAAGN,cAAc,CAACO,KAAK,IAAIA,KAAV,CAA9B;AACA,QAAMC,QAAQ,GAAGP,WAAW,EAA5B,CAFsC,CAItC;AACA;AACA;AAGA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;;AAEA,QAAMQ,cAAc,GAAG,MAAM;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B;AAAEL,MAAAA;AAAF,KAA5B;;AACA,QAAIA,OAAO,CAACA,OAAR,CAAgBM,MAAhB,GAAyB,CAA7B,EAAgC;AAE5BF,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBL,OAAO,CAACA,OAAhC;AACAA,MAAAA,OAAO,CAACA,OAAR,CAAgBO,GAAhB,CAAoBC,MAAM,IAAI;AAC1B,4BACI,QAAC,cAAD;AACI,UAAA,MAAM,EAAEA,MADZ;AAGI,UAAA,cAAc,EAAEA,MAAM,IAAIN,QAAQ,CAACL,UAAU,CAACW,MAAM,CAACC,IAAR,CAAX;AAHtC,WAESD,MAAM,CAACE,KAFhB;AAAA;AAAA;AAAA;AAAA,gBADJ;AAOH,OARD;AASH;AACJ,GAfD;;AAkBA,sBACI;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA,cACKP,cAAc;AADnB;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,C,CAGD;AACA;AACA;AAEA;AACA;AACA;AAEA;;GAxEwBL,U;UACJJ,c,EACCC,W;;;KAFGG,U","sourcesContent":["import React from 'react'\n// import { connect } from 'react-redux'\n// import { bindActionCreators, dispatch } from 'redux'\nimport { useMappedState, useDispatch } from 'redux-react-hook'\n// import _ from 'lodash'\nimport RecipeListItem from './recipe_list_item'\nimport { showRecipe } from '../actions'\n\nexport default function RecipeList(props) {\n    const recipes = useMappedState(state => state)\n    const disPatch = useDispatch()\n\n    // state = {\n    //   dataSource: [],\n    // }\n\n\n    // componentDidMount() {\n    //   fetchData()\n\n    // }\n\n    // fetchData() {\n    //   const REQUEST_URL = 'http://www.recipepuppy.com/'\n\n    //   fetch(REQUEST_URL)\n    //     .then((response) => response.json())\n    //     .then((responseData) => {\n    //       let getAll = []\n\n    //       responseData.map(a => {\n    //         if (a.addToMyList == true) {\n    //           getAll.push(a)\n    //         }\n    //       })\n\n    //       this.setState({ dataSource: getAll })\n\n\n    //     })\n    //     .catch((err) => {\n    //       console.log('error 是 ', err)\n    //     })\n    // }\n\n    const getRecipeItems = () => {\n        console.log('要來列出list了！！！', { recipes })\n        if (recipes.recipes.length > 0) {\n\n            console.log('要開始渲染資料！', recipes.recipes)\n            recipes.recipes.map(recipe => {\n                return (\n                    <RecipeListItem\n                        recipe={recipe}\n                        key={recipe.title}\n                        onRecipeSelect={recipe => disPatch(showRecipe(recipe.href))}\n                    />\n                )\n            })\n        }\n    }\n\n\n    return (\n        <ul className=\"list-group\">\n            {getRecipeItems()}\n        </ul>\n    )\n\n}\n\n\n// function mapDispatchToProps(dispatch) {\n//     return bindActionCreators({ showRecipe }, dispatch)\n// }\n\n// function mapStateToProps({ recipes }) {\n//     return { recipes }\n// }\n\n// export default connect(mapStateToProps, mapDispatchToProps)(RecipeList)\n"]},"metadata":{},"sourceType":"module"}