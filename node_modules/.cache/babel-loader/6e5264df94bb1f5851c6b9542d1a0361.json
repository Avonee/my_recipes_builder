{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/avon/Documents/Projects/web/my-recipe/src/components/search_bar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react'; // import { connect } from 'react-redux'\n\nimport { useDispatch } from 'redux-react-hook'; // import { bindActionCreators } from 'redux'\n// import { bindActionCreators, dispatch } from 'redux'\n\nimport _ from 'lodash';\nimport { fetchRecipes, showRecipe } from '../actions';\nimport RecipeListItem from './recipe_list_item';\nexport default function SearchBar(props) {\n  _s();\n\n  const disPatch = useDispatch();\n  const [term, setTerm] = useState('');\n  const [myLists, setMyLists] = useState([]);\n  const [searchItem, setSearchItem] = useState('');\n  const [searchLists, setSearchLists] = useState([]);\n  useEffect(() => {\n    disPatch(fetchRecipes(''));\n    loadStorage(); // TODO: 會偵測到這頁嗎？\n  }, []);\n\n  const loadStorage = () => {\n    let loadDatas = JSON.parse(localStorage.getItem('myDatas'));\n\n    if (loadDatas) {\n      setMyLists(loadDatas);\n    }\n  };\n\n  const searchMyLists = term => {\n    const re = new RegExp(`${term}`);\n    const sLists = myLists.filter(record => record.title.match(re) || record.ingredients.match(re));\n    setSearchLists(sLists);\n  };\n\n  const onInputChange = term => {\n    const debouncedFetchRecipes = _.debounce(term => {\n      disPatch(fetchRecipes(term));\n      searchMyLists(term);\n    }, 300); // const debouncedFetchRecipes = _.debounce(term => { bindActionCreators(fetchRecipes(term), disPatch) }, 300)\n    // console.log('有道search bar 這裡了媽？', term)\n\n\n    setTerm(term);\n    setSearchItem(term);\n    debouncedFetchRecipes(term);\n  };\n\n  const getMyRecipeItems = () => {\n    if (myLists.length > 0) {\n      let renderLists = [];\n\n      if (searchItem !== '') {\n        renderLists = searchLists;\n      } else {\n        renderLists = myLists;\n      }\n\n      return renderLists.map(myList => {\n        // console.log('每一筆資料 my：：：', myList)\n        return /*#__PURE__*/_jsxDEV(RecipeListItem, {\n          recipe: myList,\n          onRecipeSelect: myList => {\n            if (myList.href.length > 0) {\n              disPatch(showRecipe(myList.href));\n            } else {\n              message.error(`No link here`, 2.5);\n            }\n          }\n        }, myList.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-bar\",\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      autoFocus: true,\n      value: term,\n      onChange: e => onInputChange(e.target.value),\n      placeholder: \"Search By Ingredients...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n} // function mapDispatchToProps(dispatch) {\n//     return bindActionCreators({ fetchRecipes }, dispatch)\n// }\n// export default connect(null, mapDispatchToProps)(SearchBar)\n\n_s(SearchBar, \"+R3VDlo9wDT1BMMTXoHl54HmjWw=\", false, function () {\n  return [useDispatch];\n});\n\n_c = SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["/Users/avon/Documents/Projects/web/my-recipe/src/components/search_bar.js"],"names":["React","useState","useEffect","useDispatch","_","fetchRecipes","showRecipe","RecipeListItem","SearchBar","props","disPatch","term","setTerm","myLists","setMyLists","searchItem","setSearchItem","searchLists","setSearchLists","loadStorage","loadDatas","JSON","parse","localStorage","getItem","searchMyLists","re","RegExp","sLists","filter","record","title","match","ingredients","onInputChange","debouncedFetchRecipes","debounce","getMyRecipeItems","length","renderLists","map","myList","href","message","error","id","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\n// import { connect } from 'react-redux'\nimport { useDispatch } from 'redux-react-hook'\n// import { bindActionCreators } from 'redux'\n// import { bindActionCreators, dispatch } from 'redux'\nimport _ from 'lodash'\nimport { fetchRecipes, showRecipe } from '../actions'\nimport RecipeListItem from './recipe_list_item'\n\n\nexport default function SearchBar(props) {\n    const disPatch = useDispatch()\n    const [term, setTerm] = useState('')\n    const [myLists, setMyLists] = useState([])\n    const [searchItem, setSearchItem] = useState('')\n    const [searchLists, setSearchLists] = useState([])\n\n    useEffect(() => {\n        disPatch(fetchRecipes(''))\n        loadStorage()\n        // TODO: 會偵測到這頁嗎？\n    }, [])\n\n    const loadStorage = () => {\n        let loadDatas = JSON.parse(localStorage.getItem('myDatas'))\n        if (loadDatas) {\n            setMyLists(loadDatas)\n        }\n    }\n\n    const searchMyLists = (term) => {\n        const re = new RegExp(`${term}`);\n        const sLists = myLists.filter(record => (record.title.match(re) || record.ingredients.match(re)))\n        setSearchLists(sLists)\n    }\n\n    const onInputChange = (term) => {\n        const debouncedFetchRecipes = _.debounce(term => {\n            disPatch(fetchRecipes(term))\n            searchMyLists(term)\n        }, 300)\n        // const debouncedFetchRecipes = _.debounce(term => { bindActionCreators(fetchRecipes(term), disPatch) }, 300)\n        // console.log('有道search bar 這裡了媽？', term)\n        setTerm(term)\n        setSearchItem(term)\n        debouncedFetchRecipes(term)\n    }\n\n    const getMyRecipeItems = () => {\n\n        if (myLists.length > 0) {\n\n            let renderLists = []\n            if (searchItem !== '') {\n                renderLists = searchLists\n            } else {\n                renderLists = myLists\n            }\n\n            return (renderLists.map(myList => {\n                // console.log('每一筆資料 my：：：', myList)\n                return (\n                    <RecipeListItem\n                        recipe={myList}\n                        key={myList.id}\n                        onRecipeSelect={myList => {\n                            if (myList.href.length > 0) {\n                                disPatch(showRecipe(myList.href))\n                            } else {\n                                message.error(`No link here`, 2.5);\n                            }\n                        }\n                        }\n                    />\n                )\n            }))\n        }\n    }\n\n    return (\n        <div className=\"search-bar\">\n            <input\n                autoFocus\n                value={term}\n                onChange={e => onInputChange(e.target.value)}\n                placeholder=\"Search By Ingredients...\"\n            />\n        </div>\n    )\n\n\n\n}\n\n// function mapDispatchToProps(dispatch) {\n//     return bindActionCreators({ fetchRecipes }, dispatch)\n// }\n\n// export default connect(null, mapDispatchToProps)(SearchBar)\n"]},"metadata":{},"sourceType":"module"}