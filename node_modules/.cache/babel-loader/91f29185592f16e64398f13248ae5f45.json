{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/avon/Documents/Projects/web/my-recipe/src/components/form_list.js\";\nimport React, { useState } from 'react';\nimport 'antd/dist/antd.css';\nimport { Form, Input, Button, Radio } from 'antd'; // import { useDispatch } from 'redux-react-hook'\n\nimport _ from 'lodash';\nexport default function FormList(props) {\n  // const disPatch = useDispatch()\n  // const [term, setTerm] = useState('')\n  // const onInputChange = (term) => {\n  //     const debouncedFetchRecipes = _.debounce(term => { disPatch(fetchRecipes(term)) }, 300)\n  //     setTerm(term)\n  //     debouncedFetchRecipes(term)\n  // }\n  const formRef = /*#__PURE__*/React.createRef(); // const [form] = Form.useForm();\n  // const formLayout = 'vertical'\n\n  const layout = {\n    labelCol: {\n      span: 8\n    },\n    wrapperCol: {\n      span: 16\n    }\n  };\n  const tailLayout = {\n    wrapperCol: {\n      offset: 8,\n      span: 16\n    }\n  };\n\n  const onFinish = values => {\n    console.log(values);\n  };\n\n  const onReset = () => {\n    formRef.current.resetFields();\n  };\n\n  return (\n    /*#__PURE__*/\n    // <div className=\"search-bar\">\n    //     <input\n    //         autoFocus\n    //         value={term}\n    //         onChange={e => onInputChange(e.target.value)}\n    //         placeholder=\"Search By Ingredients...\"\n    //     />\n    // </div>\n    _jsxDEV(Form // {...formItemLayout}\n    // layout={formLayout}\n    // form={form}\n    , { ...layout,\n      ref: formRef,\n      name: \"control-ref\",\n      onFinish: () => onFinish() // onValuesChange={onFormLayoutChange}\n      ,\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"aaa\",\n        label: \"Field A\",\n        rules: [{\n          required: true\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"input placeholder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"bbb\",\n        label: \"Field B\",\n        rules: [{\n          required: true\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"input placeholder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...tailLayout,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          htmlType: \"button\",\n          onClick: () => onReset(),\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)\n  );\n}\n_c = FormList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormList\");","map":{"version":3,"sources":["/Users/avon/Documents/Projects/web/my-recipe/src/components/form_list.js"],"names":["React","useState","Form","Input","Button","Radio","_","FormList","props","formRef","createRef","layout","labelCol","span","wrapperCol","tailLayout","offset","onFinish","values","console","log","onReset","current","resetFields","required"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,oBAAP;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,EAA8BC,KAA9B,QAA2C,MAA3C,C,CACA;;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACpC;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA,QAAMC,OAAO,gBAAGT,KAAK,CAACU,SAAN,EAAhB,CAVoC,CAWpC;AACA;;AACA,QAAMC,MAAM,GAAG;AACXC,IAAAA,QAAQ,EAAE;AACNC,MAAAA,IAAI,EAAE;AADA,KADC;AAIXC,IAAAA,UAAU,EAAE;AACRD,MAAAA,IAAI,EAAE;AADE;AAJD,GAAf;AAQA,QAAME,UAAU,GAAG;AACfD,IAAAA,UAAU,EAAE;AACRE,MAAAA,MAAM,EAAE,CADA;AAERH,MAAAA,IAAI,EAAE;AAFE;AADG,GAAnB;;AAOA,QAAMI,QAAQ,GAAIC,MAAD,IAAY;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACH,GAFD;;AAGA,QAAMG,OAAO,GAAG,MAAM;AAClBZ,IAAAA,OAAO,CAACa,OAAR,CAAgBC,WAAhB;AACH,GAFD;;AAIA;AAAA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAC,IAAD,CACI;AACA;AACA;AAHJ,WAIQZ,MAJR;AAKI,MAAA,GAAG,EAAEF,OALT;AAKkB,MAAA,IAAI,EAAC,aALvB;AAKqC,MAAA,QAAQ,EAAE,MAAMQ,QAAQ,EAL7D,CAMA;AANA;AAAA,8BASI,QAAC,IAAD,CAAM,IAAN;AAAW,QAAA,IAAI,EAAC,KAAhB;AAAsB,QAAA,KAAK,EAAC,SAA5B;AAAsC,QAAA,KAAK,EAAE,CAAC;AAAEO,UAAAA,QAAQ,EAAE;AAAZ,SAAD,CAA7C;AAAA,+BACI,QAAC,KAAD;AAAO,UAAA,WAAW,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cATJ,eAYI,QAAC,IAAD,CAAM,IAAN;AAAW,QAAA,IAAI,EAAC,KAAhB;AAAsB,QAAA,KAAK,EAAC,SAA5B;AAAsC,QAAA,KAAK,EAAE,CAAC;AAAEA,UAAAA,QAAQ,EAAE;AAAZ,SAAD,CAA7C;AAAA,+BACI,QAAC,KAAD;AAAO,UAAA,WAAW,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAZJ,eAeI,QAAC,IAAD,CAAM,IAAN,OAAeT,UAAf;AAAA,gCACI,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,SAAb;AAAuB,UAAA,QAAQ,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,MAAD;AAAQ,UAAA,QAAQ,EAAC,QAAjB;AAA0B,UAAA,OAAO,EAAE,MAAMM,OAAO,EAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAfJ;AAAA;AAAA;AAAA;AAAA;AAAA;AATJ;AAkCH;KArEuBd,Q","sourcesContent":["import React, { useState } from 'react'\nimport 'antd/dist/antd.css';\nimport { Form, Input, Button, Radio } from 'antd';\n// import { useDispatch } from 'redux-react-hook'\nimport _ from 'lodash'\n\nexport default function FormList(props) {\n    // const disPatch = useDispatch()\n\n    // const [term, setTerm] = useState('')\n\n    // const onInputChange = (term) => {\n    //     const debouncedFetchRecipes = _.debounce(term => { disPatch(fetchRecipes(term)) }, 300)\n    //     setTerm(term)\n    //     debouncedFetchRecipes(term)\n    // }\n    const formRef = React.createRef();\n    // const [form] = Form.useForm();\n    // const formLayout = 'vertical'\n    const layout = {\n        labelCol: {\n            span: 8,\n        },\n        wrapperCol: {\n            span: 16,\n        },\n    };\n    const tailLayout = {\n        wrapperCol: {\n            offset: 8,\n            span: 16,\n        },\n    };\n\n    const onFinish = (values) => {\n        console.log(values);\n    };\n    const onReset = () => {\n        formRef.current.resetFields();\n    };\n\n    return (\n        // <div className=\"search-bar\">\n        //     <input\n        //         autoFocus\n        //         value={term}\n        //         onChange={e => onInputChange(e.target.value)}\n        //         placeholder=\"Search By Ingredients...\"\n        //     />\n        // </div>\n        <Form\n            // {...formItemLayout}\n            // layout={formLayout}\n            // form={form}\n            {...layout}\n            ref={formRef} name=\"control-ref\" onFinish={() => onFinish()}\n        // onValuesChange={onFormLayoutChange}\n        >\n\n            <Form.Item name=\"aaa\" label=\"Field A\" rules={[{ required: true }]}>\n                <Input placeholder=\"input placeholder\" />\n            </Form.Item>\n            <Form.Item name=\"bbb\" label=\"Field B\" rules={[{ required: true }]}>\n                <Input placeholder=\"input placeholder\" />\n            </Form.Item>\n            <Form.Item {...tailLayout}>\n                <Button type=\"primary\" htmlType=\"submit\">Submit</Button>\n                <Button htmlType=\"button\" onClick={() => onReset()}>Reset</Button>\n            </Form.Item>\n        </Form>\n\n    )\n\n\n\n}\n"]},"metadata":{},"sourceType":"module"}